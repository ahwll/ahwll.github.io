<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>test</title>
    <url>/2021/08/09/test/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>R语言简明绘图笔记</title>
    <url>/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="R语言基本绘图"><a href="#R语言基本绘图" class="headerlink" title="R语言基本绘图"></a>R语言基本绘图</h1><p>本笔记代码来自 <a href="https://www.statmethods.net/index.html">Quick-R</a> 和 <a href="http://www.cookbook-r.com/">Cookbook for R</a> 网站，供大家学习交流使用。</p>
<span id="more"></span>



<h2 id="柱状图和密度图"><a href="#柱状图和密度图" class="headerlink" title="柱状图和密度图"></a>柱状图和密度图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Simple Histogram</span></span><br><span class="line">hist(mtcars$mpg)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-1-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Colored Histogram with Different Number of Bins</span></span><br><span class="line">hist(mtcars$mpg, breaks=<span class="number">12</span>, col=<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-1-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add a Normal Curve</span></span><br><span class="line">x &lt;- mtcars$mpg </span><br><span class="line">h&lt;-hist(x, breaks=<span class="number">10</span>, col=<span class="string">&quot;red&quot;</span>, xlab=<span class="string">&quot;Miles Per Gallon&quot;</span>, </span><br><span class="line">   main=<span class="string">&quot;Histogram with Normal Curve&quot;</span>) </span><br><span class="line">xfit&lt;-seq(<span class="built_in">min</span>(x),<span class="built_in">max</span>(x),<span class="built_in">length</span>=<span class="number">40</span>) </span><br><span class="line">yfit&lt;-dnorm(xfit,mean=mean(x),sd=sd(x)) </span><br><span class="line">yfit &lt;- yfit*diff(h$mids[<span class="number">1</span>:<span class="number">2</span>])*<span class="built_in">length</span>(x) </span><br><span class="line">lines(xfit, yfit, col=<span class="string">&quot;blue&quot;</span>, lwd=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-1-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Kernel Density Plot</span></span><br><span class="line">d &lt;- density(mtcars$mpg) <span class="comment"># returns the density data </span></span><br><span class="line">plot(d) <span class="comment"># plots the results</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-1-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Comparing Groups VIA Kernal Density</span></span><br><span class="line"><span class="comment"># Compare MPG distributions for cars with </span></span><br><span class="line"><span class="comment"># 4,6, or 8 cylinders</span></span><br><span class="line"><span class="comment"># install.packages(&quot;sm&quot;)</span></span><br><span class="line"></span><br><span class="line">library(sm)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Package &#x27;sm&#x27;, version 2.2-5.6: type help(sm) for summary information</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attach(mtcars)</span><br><span class="line"></span><br><span class="line"><span class="comment"># create value labels</span></span><br><span class="line">cyl.f &lt;- factor(cyl, levels= <span class="built_in">c</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>),</span><br><span class="line">  labels = <span class="built_in">c</span>(<span class="string">&quot;4 cylinder&quot;</span>, <span class="string">&quot;6 cylinder&quot;</span>, <span class="string">&quot;8 cylinder&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot densities</span></span><br><span class="line">sm.density.compare(mpg, cyl, xlab=<span class="string">&quot;Miles Per Gallon&quot;</span>)</span><br><span class="line">title(main=<span class="string">&quot;MPG Distribution by Car Cylinders&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add legend</span></span><br><span class="line">colfill&lt;-<span class="built_in">c</span>(<span class="number">2</span>:(<span class="number">2</span>+<span class="built_in">length</span>(levels(cyl.f)))) </span><br><span class="line">legend(<span class="string">&quot;topleft&quot;</span>, levels(cyl.f), fill=colfill)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-1-5.png"><!-- --></p>
<h2 id="点状图"><a href="#点状图" class="headerlink" title="点状图"></a>点状图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Simple Dotplot</span></span><br><span class="line">dotchart(mtcars$mpg,labels=row.names(mtcars),cex=<span class="number">.7</span>,</span><br><span class="line">   main=<span class="string">&quot;Gas Milage for Car Models&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Miles Per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-2-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Dotplot: Grouped Sorted and Colored</span></span><br><span class="line"><span class="comment"># Sort by mpg, group and color by cylinder </span></span><br><span class="line">x &lt;- mtcars[order(mtcars$mpg),] <span class="comment"># sort by mpg</span></span><br><span class="line">x$cyl &lt;- factor(x$cyl) <span class="comment"># it must be a factor</span></span><br><span class="line">x$color[x$cyl==<span class="number">4</span>] &lt;- <span class="string">&quot;red&quot;</span></span><br><span class="line">x$color[x$cyl==<span class="number">6</span>] &lt;- <span class="string">&quot;blue&quot;</span></span><br><span class="line">x$color[x$cyl==<span class="number">8</span>] &lt;- <span class="string">&quot;darkgreen&quot;</span> </span><br><span class="line">dotchart(x$mpg,labels=row.names(x),cex=<span class="number">.7</span>,groups= x$cyl,</span><br><span class="line">   main=<span class="string">&quot;Gas Milage for Car Models\n grouped by cylinder&quot;</span>,</span><br><span class="line">   xlab=<span class="string">&quot;Miles Per Gallon&quot;</span>, gcolor=<span class="string">&quot;black&quot;</span>, color=x$color)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-2-2.png"><!-- --></p>
<h2 id="条形图"><a href="#条形图" class="headerlink" title="条形图"></a>条形图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Simple Bar Plot </span></span><br><span class="line">counts &lt;- table(mtcars$gear)</span><br><span class="line">barplot(counts, main=<span class="string">&quot;Car Distribution&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Number of Gears&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-3-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Simple Horizontal Bar Plot with Added Labels </span></span><br><span class="line">counts &lt;- table(mtcars$gear)</span><br><span class="line">barplot(counts, main=<span class="string">&quot;Car Distribution&quot;</span>, horiz=<span class="literal">TRUE</span>,</span><br><span class="line">  names.arg=<span class="built_in">c</span>(<span class="string">&quot;3 Gears&quot;</span>, <span class="string">&quot;4 Gears&quot;</span>, <span class="string">&quot;5 Gears&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-3-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Stacked Bar Plot with Colors and Legend</span></span><br><span class="line">counts &lt;- table(mtcars$vs, mtcars$gear)</span><br><span class="line">barplot(counts, main=<span class="string">&quot;Car Distribution by Gears and VS&quot;</span>,</span><br><span class="line">  xlab=<span class="string">&quot;Number of Gears&quot;</span>, col=<span class="built_in">c</span>(<span class="string">&quot;darkblue&quot;</span>,<span class="string">&quot;red&quot;</span>),</span><br><span class="line">  legend = rownames(counts))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-3-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Grouped Bar Plot</span></span><br><span class="line">counts &lt;- table(mtcars$vs, mtcars$gear)</span><br><span class="line">barplot(counts, main=<span class="string">&quot;Car Distribution by Gears and VS&quot;</span>,</span><br><span class="line">  xlab=<span class="string">&quot;Number of Gears&quot;</span>, col=<span class="built_in">c</span>(<span class="string">&quot;darkblue&quot;</span>,<span class="string">&quot;red&quot;</span>),</span><br><span class="line">  legend = rownames(counts), beside=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-3-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fitting Labels </span></span><br><span class="line">par(las=<span class="number">2</span>) <span class="comment"># make label text perpendicular to axis</span></span><br><span class="line">par(mar=<span class="built_in">c</span>(<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>)) <span class="comment"># increase y-axis margin.</span></span><br><span class="line"></span><br><span class="line">counts &lt;- table(mtcars$gear)</span><br><span class="line">barplot(counts, main=<span class="string">&quot;Car Distribution&quot;</span>, horiz=<span class="literal">TRUE</span>, </span><br><span class="line">        names.arg=<span class="built_in">c</span>(<span class="string">&quot;3 Gears&quot;</span>, <span class="string">&quot;4 Gears&quot;</span>, <span class="string">&quot;5   Gears&quot;</span>), cex.names=<span class="number">0.8</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-3-5.png"><!-- --></p>
<h2 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- <span class="built_in">c</span>(<span class="number">1</span>:<span class="number">5</span>); y &lt;- x <span class="comment"># create some data </span></span><br><span class="line">par(pch=<span class="number">22</span>, col=<span class="string">&quot;red&quot;</span>) <span class="comment"># plotting symbol and color </span></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">2</span>,<span class="number">4</span>)) <span class="comment"># all plots on one page </span></span><br><span class="line">opts = <span class="built_in">c</span>(<span class="string">&quot;p&quot;</span>,<span class="string">&quot;l&quot;</span>,<span class="string">&quot;o&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;s&quot;</span>,<span class="string">&quot;S&quot;</span>,<span class="string">&quot;h&quot;</span>) </span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(opts))&#123; </span><br><span class="line">  heading = paste(<span class="string">&quot;type=&quot;</span>,opts[i]) </span><br><span class="line">  plot(x, y, type=<span class="string">&quot;n&quot;</span>, main=heading) </span><br><span class="line">  lines(x, y, type=opts[i]) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-4-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Next, we demonstrate each of the type= options when plot( ) </span></span><br><span class="line"><span class="comment"># sets up the graph and does plot the points.</span></span><br><span class="line"></span><br><span class="line">x &lt;- <span class="built_in">c</span>(<span class="number">1</span>:<span class="number">5</span>); y &lt;- x <span class="comment"># create some data</span></span><br><span class="line">par(pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># plotting symbol and color </span></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">2</span>,<span class="number">4</span>)) <span class="comment"># all plots on one page </span></span><br><span class="line">opts = <span class="built_in">c</span>(<span class="string">&quot;p&quot;</span>,<span class="string">&quot;l&quot;</span>,<span class="string">&quot;o&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;s&quot;</span>,<span class="string">&quot;S&quot;</span>,<span class="string">&quot;h&quot;</span>) </span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(opts))&#123; </span><br><span class="line">  heading = paste(<span class="string">&quot;type=&quot;</span>,opts[i]) </span><br><span class="line">  plot(x, y, main=heading) </span><br><span class="line">  lines(x, y, type=opts[i]) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-4-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create Line Chart</span></span><br><span class="line"><span class="comment"># convert factor to numeric for convenience </span></span><br><span class="line"></span><br><span class="line">Orange$Tree &lt;- <span class="built_in">as.numeric</span>(Orange$Tree)</span><br><span class="line">ntrees &lt;- <span class="built_in">max</span>(Orange$Tree)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the range for the x and y axis </span></span><br><span class="line">xrange &lt;- <span class="built_in">range</span>(Orange$age) </span><br><span class="line">yrange &lt;- <span class="built_in">range</span>(Orange$circumference) </span><br><span class="line"></span><br><span class="line"><span class="comment"># set up the plot </span></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>)) <span class="comment"># all plots on one page </span></span><br><span class="line">plot(xrange, yrange, type=<span class="string">&quot;n&quot;</span>, xlab=<span class="string">&quot;Age (days)&quot;</span>,</span><br><span class="line">   ylab=<span class="string">&quot;Circumference (mm)&quot;</span> ) </span><br><span class="line">colors &lt;- rainbow(ntrees) </span><br><span class="line">linetype &lt;- <span class="built_in">c</span>(<span class="number">1</span>:ntrees) </span><br><span class="line">plotchar &lt;- seq(<span class="number">18</span>,<span class="number">18</span>+ntrees,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add lines </span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:ntrees) &#123; </span><br><span class="line">  tree &lt;- subset(Orange, Tree==i) </span><br><span class="line">  lines(tree$age, tree$circumference, type=<span class="string">&quot;b&quot;</span>, lwd=<span class="number">1.5</span>,</span><br><span class="line">    lty=linetype[i], col=colors[i], pch=plotchar[i]) </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment"># add a title and subtitle </span></span><br><span class="line">title(<span class="string">&quot;Tree Growth&quot;</span>, <span class="string">&quot;example of line plot&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add a legend </span></span><br><span class="line">legend(xrange[<span class="number">1</span>], yrange[<span class="number">2</span>], <span class="number">1</span>:ntrees, cex=<span class="number">0.8</span>, col=colors,</span><br><span class="line">   pch=plotchar, lty=linetype, title=<span class="string">&quot;Tree&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-4-3.png"><!-- --></p>
<h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Simple Pie Chart</span></span><br><span class="line">slices &lt;- <span class="built_in">c</span>(<span class="number">10</span>, <span class="number">12</span>,<span class="number">4</span>, <span class="number">16</span>, <span class="number">8</span>)</span><br><span class="line">lbls &lt;- <span class="built_in">c</span>(<span class="string">&quot;US&quot;</span>, <span class="string">&quot;UK&quot;</span>, <span class="string">&quot;Australia&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;France&quot;</span>)</span><br><span class="line">pie(slices, labels = lbls, main=<span class="string">&quot;Pie Chart of Countries&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-5-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Pie Chart with Percentages</span></span><br><span class="line">slices &lt;- <span class="built_in">c</span>(<span class="number">10</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">8</span>) </span><br><span class="line">lbls &lt;- <span class="built_in">c</span>(<span class="string">&quot;US&quot;</span>, <span class="string">&quot;UK&quot;</span>, <span class="string">&quot;Australia&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;France&quot;</span>)</span><br><span class="line">pct &lt;- <span class="built_in">round</span>(slices/<span class="built_in">sum</span>(slices)*<span class="number">100</span>)</span><br><span class="line">lbls &lt;- paste(lbls, pct) <span class="comment"># add percents to labels </span></span><br><span class="line">lbls &lt;- paste(lbls,<span class="string">&quot;%&quot;</span>,sep=<span class="string">&quot;&quot;</span>) <span class="comment"># ad % to labels </span></span><br><span class="line">pie(slices,labels = lbls, col=rainbow(<span class="built_in">length</span>(lbls)),</span><br><span class="line">   main=<span class="string">&quot;Pie Chart of Countries&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-5-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The pie3D( ) function in the plotrix package provides 3D exploded pie charts.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3D Exploded Pie Chart</span></span><br><span class="line"><span class="comment"># install.packages(&quot;plotrix&quot;)</span></span><br><span class="line">library(plotrix)</span><br><span class="line">slices &lt;- <span class="built_in">c</span>(<span class="number">10</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">8</span>) </span><br><span class="line">lbls &lt;- <span class="built_in">c</span>(<span class="string">&quot;US&quot;</span>, <span class="string">&quot;UK&quot;</span>, <span class="string">&quot;Australia&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;France&quot;</span>)</span><br><span class="line">pie3D(slices,labels=lbls,explode=<span class="number">0.1</span>,</span><br><span class="line">   main=<span class="string">&quot;Pie Chart of Countries &quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-5-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pie3D(slices,labels=lbls,explode=<span class="number">0.5</span>,</span><br><span class="line">   main=<span class="string">&quot;Pie Chart of Countries &quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-5-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Pie Chart from data frame with Appended Sample Sizes</span></span><br><span class="line">mytable &lt;- table(iris$Species)</span><br><span class="line">lbls &lt;- paste(<span class="built_in">names</span>(mytable), <span class="string">&quot;\n&quot;</span>, mytable, sep=<span class="string">&quot;&quot;</span>)</span><br><span class="line">pie(mytable, labels = lbls, </span><br><span class="line">   main=<span class="string">&quot;Pie Chart of Species\n (with sample sizes)&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-5-5.png"><!-- --></p>
<h2 id="箱线图"><a href="#箱线图" class="headerlink" title="箱线图"></a>箱线图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Boxplot of MPG by Car Cylinders </span></span><br><span class="line">boxplot(mpg~cyl,data=mtcars, main=<span class="string">&quot;Car Milage Data&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Number of Cylinders&quot;</span>, ylab=<span class="string">&quot;Miles Per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-6-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">boxplot(mpg~cyl,data=mtcars, col= rainbow(<span class="built_in">length</span>(unique(cyl))), </span><br><span class="line">        main=<span class="string">&quot;Car Milage Data&quot;</span>, xlab=<span class="string">&quot;Number of Cylinders&quot;</span>, ylab=<span class="string">&quot;Miles Per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-6-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Notched Boxplot of Tooth Growth Against 2 Crossed Factors</span></span><br><span class="line"><span class="comment"># boxes colored for ease of interpretation </span></span><br><span class="line">boxplot(len~supp*dose, data=ToothGrowth, notch=<span class="literal">TRUE</span>, </span><br><span class="line">  col=(<span class="built_in">c</span>(<span class="string">&quot;gold&quot;</span>,<span class="string">&quot;darkgreen&quot;</span>)),</span><br><span class="line">  main=<span class="string">&quot;Tooth Growth&quot;</span>, xlab=<span class="string">&quot;Suppliment and Dose&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Warning in bxp(list(stats = structure(c(8.2, 9.7, 12.25, 16.5, 21.5, 4.2, : some</span><br><span class="line">## notches went outside hinges (&#x27;box&#x27;): maybe set notch=FALSE</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Violin Plots</span></span><br><span class="line"><span class="comment"># A violin plot is a combination of a boxplot and a kernel density plot. </span></span><br><span class="line"><span class="comment"># They can be created using the vioplot( ) function from vioplot package.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Violin Plots</span></span><br><span class="line"><span class="comment"># install.packages(&quot;vioplot&quot;)</span></span><br><span class="line">library(vioplot)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Loading required package: zoo</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;zoo&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from &#x27;package:base&#x27;:</span><br><span class="line">## </span><br><span class="line">##     as.Date, as.Date.numeric</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-6-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x1 &lt;- mtcars$mpg[mtcars$cyl==<span class="number">4</span>]</span><br><span class="line">x2 &lt;- mtcars$mpg[mtcars$cyl==<span class="number">6</span>]</span><br><span class="line">x3 &lt;- mtcars$mpg[mtcars$cyl==<span class="number">8</span>]</span><br><span class="line">vioplot(x1, x2, x3, <span class="built_in">names</span>=<span class="built_in">c</span>(<span class="string">&quot;4 cyl&quot;</span>, <span class="string">&quot;6 cyl&quot;</span>, <span class="string">&quot;8 cyl&quot;</span>), </span><br><span class="line">   col=<span class="string">&quot;gold&quot;</span>)</span><br><span class="line">title(<span class="string">&quot;Violin Plots of Miles Per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-6-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bagplot - A 2D Boxplot Extension</span></span><br><span class="line"><span class="comment"># The bagplot(x, y) function in the aplpack package provides a </span></span><br><span class="line"><span class="comment"># bivariate version of the univariate boxplot. The bag contains</span></span><br><span class="line"><span class="comment"># 50% of all points. The bivariate median is approximated. </span></span><br><span class="line"><span class="comment"># The fence separates points in the fence from points outside. </span></span><br><span class="line"><span class="comment"># Outliers are displayed.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of a Bagplot</span></span><br><span class="line"><span class="comment"># install.packages(&quot;aplpack&quot;)</span></span><br><span class="line"><span class="comment"># library(aplpack)</span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># bagplot(wt,mpg, xlab=&quot;Car Weight&quot;, ylab=&quot;Miles Per Gallon&quot;,</span></span><br><span class="line"><span class="comment">#   main=&quot;Bagplot Example&quot;)</span></span><br></pre></td></tr></table></figure>

<h2 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Simple Scatterplot</span></span><br><span class="line">attach(mtcars)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 6):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(wt, mpg, main=<span class="string">&quot;Scatterplot Example&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Car Weight &quot;</span>, ylab=<span class="string">&quot;Miles Per Gallon &quot;</span>, pch=<span class="number">19</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add fit lines</span></span><br><span class="line">attach(mtcars)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 3):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 7):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(wt, mpg, main=<span class="string">&quot;Scatterplot Example&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Car Weight &quot;</span>, ylab=<span class="string">&quot;Miles Per Gallon &quot;</span>, pch=<span class="number">19</span>)</span><br><span class="line">abline(lm(mpg~wt), col=<span class="string">&quot;red&quot;</span>) <span class="comment"># regression line (y~x) </span></span><br><span class="line">lines(lowess(wt,mpg), col=<span class="string">&quot;blue&quot;</span>) <span class="comment"># lowess line (x,y)</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install.packages(&quot;car&quot;)</span></span><br><span class="line"><span class="comment"># help</span></span><br><span class="line">library(car) </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Loading required package: carData</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot(prestige ~ income, data=Prestige, ellipse=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot(prestige ~ income, data=Prestige, ellipse=<span class="built_in">F</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot(prestige ~ income, data=Prestige, smooth=<span class="built_in">list</span>(smoother=quantregLine))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot(prestige ~ income | type, data=Prestige, legend=<span class="built_in">list</span>(coords=<span class="string">&quot;topleft&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot(mpg ~ wt | cyl, data=mtcars,</span><br><span class="line">   xlab=<span class="string">&quot;Weight of Car&quot;</span>, ylab=<span class="string">&quot;Miles Per Gallon&quot;</span>,</span><br><span class="line">   main=<span class="string">&quot;Enhanced Scatter Plot&quot;</span>,</span><br><span class="line">   legend=<span class="built_in">list</span>(coords=<span class="string">&quot;topleft&quot;</span>)) <span class="comment"># labels=row.names(mtcars)</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># There are at least 4 useful functions for creating scatterplot matrices. Analysts must love scatterplot matrices!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Basic Scatterplot Matrix</span></span><br><span class="line">pairs(~mpg+disp+drat+wt,data=mtcars, </span><br><span class="line">   main=<span class="string">&quot;Simple Scatterplot Matrix&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The lattice package provides options to condition the scatterplot matrix </span></span><br><span class="line"><span class="comment"># on a factor.</span></span><br><span class="line"><span class="comment"># Scatterplot Matrices from the lattice Package </span></span><br><span class="line"></span><br><span class="line">library(lattice)</span><br><span class="line">super.sym &lt;- trellis.par.get(<span class="string">&quot;superpose.symbol&quot;</span>)</span><br><span class="line">splom(mtcars[<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>)], groups=cyl, data=mtcars,</span><br><span class="line">   panel=panel.superpose,</span><br><span class="line">   key=<span class="built_in">list</span>(title=<span class="string">&quot;Three Cylinder Options&quot;</span>,</span><br><span class="line">   columns = <span class="number">3</span>, </span><br><span class="line">   points = <span class="built_in">list</span>(pch = super.sym$pch[<span class="number">1</span>:<span class="number">3</span>],</span><br><span class="line">   col = super.sym$col[<span class="number">1</span>:<span class="number">3</span>]),</span><br><span class="line">   text=<span class="built_in">list</span>(<span class="built_in">c</span>(<span class="string">&quot;4 Cylinder&quot;</span>,<span class="string">&quot;6 Cylinder&quot;</span>,<span class="string">&quot;8 Cylinder&quot;</span>))))</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Warning in splom.data.frame(mtcars[c(1, 3, 5, 6)], groups = cyl, data =</span><br><span class="line">## mtcars, : explicit &#x27;data&#x27; specification ignored</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The car package can condition the scatterplot matrix on a factor, </span></span><br><span class="line"><span class="comment"># and optionally include lowess and linear best fit lines, and boxplot, </span></span><br><span class="line"><span class="comment"># densities, or histograms in the principal diagonal, as well as rug </span></span><br><span class="line"><span class="comment"># plots in the margins of the cells.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scatterplot Matrices from the car Package</span></span><br><span class="line"><span class="comment"># library(car)</span></span><br><span class="line"><span class="comment"># scatterplotMatrix(~mpg+disp+drat+wt|cyl, data=mtcars,</span></span><br><span class="line"><span class="comment">#     main=&quot;Three Cylinder Options&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The gclus package provides options to rearrange the variables so that </span></span><br><span class="line"><span class="comment"># those with higher correlations are closer to the principal diagonal. </span></span><br><span class="line"><span class="comment"># It can also color code the cells to reflect the size of the correlations.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scatterplot Matrices from the glus Package </span></span><br><span class="line"><span class="comment"># install.packages(&quot;gclus&quot;)</span></span><br><span class="line">library(gclus)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Loading required package: cluster</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dta &lt;- mtcars[<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>)] <span class="comment"># get data </span></span><br><span class="line">dta.r &lt;- <span class="built_in">abs</span>(cor(dta)) <span class="comment"># get correlations</span></span><br><span class="line">dta.col &lt;- dmat.color(dta.r) <span class="comment"># get colors</span></span><br><span class="line"><span class="comment"># reorder variables so those with highest correlation</span></span><br><span class="line"><span class="comment"># are closest to the diagonal</span></span><br><span class="line">dta.o &lt;- order.single(dta.r) </span><br><span class="line">cpairs(dta, dta.o, panel.colors=dta.col, gap=<span class="number">.5</span>,</span><br><span class="line">main=<span class="string">&quot;Variables Ordered and Colored by Correlation&quot;</span> )</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># When there are many data points and significant overlap, scatterplots </span></span><br><span class="line"><span class="comment"># become less useful. There are several approaches that be used when this </span></span><br><span class="line"><span class="comment"># occurs. The hexbin(x, y) function in the hexbin package provides bivariate </span></span><br><span class="line"><span class="comment"># binning into hexagonal cells (it looks better than it sounds).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># High Density Scatterplot with Binning</span></span><br><span class="line"><span class="comment"># install.packages(&quot;hexbin&quot;)</span></span><br><span class="line">library(hexbin)</span><br><span class="line">x &lt;- rnorm(<span class="number">1000</span>)</span><br><span class="line">y &lt;- rnorm(<span class="number">1000</span>)</span><br><span class="line">bin&lt;-hexbin(x, y, xbins=<span class="number">50</span>) </span><br><span class="line">plot(bin, main=<span class="string">&quot;Hexagonal Binning&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Another option for a scatterplot with significant point overlap is the</span></span><br><span class="line"><span class="comment"># sunflowerplot. See help(sunflowerplot) for details.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Finally, you can save the scatterplot in PDF format and use color </span></span><br><span class="line"><span class="comment"># transparency to allow points that overlap to show through </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># High Density Scatterplot with Color Transparency </span></span><br><span class="line">x &lt;- rnorm(<span class="number">1000</span>)</span><br><span class="line">y &lt;- rnorm(<span class="number">1000</span>) </span><br><span class="line">plot(x,y, main=<span class="string">&quot;PDF Scatterplot Example&quot;</span>, col=rgb(<span class="number">0</span>,<span class="number">100</span>,<span class="number">0</span>,<span class="number">50</span>,</span><br><span class="line">    maxColorValue=<span class="number">255</span>), pch=<span class="number">16</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Note: You can use the col2rgb( ) function to get the rbg values for R colors.</span></span><br><span class="line"><span class="comment"># For example, col2rgb(&quot;darkgreen&quot;) yeilds r=0, g=100, b=0. Then add the alpha</span></span><br><span class="line"><span class="comment"># transparency level as the 4th number in the color vector. A value of zero </span></span><br><span class="line"><span class="comment"># means fully transparent. See help(rgb) for more information.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can create a 3D scatterplot with the scatterplot3d package. Use the</span></span><br><span class="line"><span class="comment"># function scatterplot3d(x, y, z).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3D Scatterplot</span></span><br><span class="line"><span class="comment"># install.packages(&quot;scatterplot3d&quot;)</span></span><br><span class="line">library(scatterplot3d)</span><br><span class="line">attach(mtcars)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 10):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 11):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 15):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot3d(wt,disp,mpg, main=<span class="string">&quot;3D Scatterplot&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3D Scatterplot with Coloring and Vertical Drop Lines</span></span><br><span class="line">library(scatterplot3d) </span><br><span class="line">attach(mtcars) </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 3):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 11):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 12):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 16):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">scatterplot3d(wt,disp,mpg, pch=<span class="number">16</span>, highlight.3d=<span class="literal">TRUE</span>,</span><br><span class="line">  type=<span class="string">&quot;h&quot;</span>, main=<span class="string">&quot;3D Scatterplot&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3D Scatterplot with Coloring and Vertical Lines</span></span><br><span class="line"><span class="comment"># and Regression Plane </span></span><br><span class="line">library(scatterplot3d) </span><br><span class="line">attach(mtcars) </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 3):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 4):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 12):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 13):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 17):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">s3d &lt;-scatterplot3d(wt,disp,mpg, pch=<span class="number">16</span>, highlight.3d=<span class="literal">TRUE</span>,</span><br><span class="line">  type=<span class="string">&quot;h&quot;</span>, main=<span class="string">&quot;3D Scatterplot&quot;</span>)</span><br><span class="line">fit &lt;- lm(mpg ~ wt+disp) </span><br><span class="line">s3d$plane3d(fit)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-7-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># You can also create an interactive 3D scatterplot using the plot3D(x, y, z)</span></span><br><span class="line"><span class="comment"># function in the rgl package. It creates a spinning 3D scatterplot that </span></span><br><span class="line"><span class="comment"># can be rotated with the mouse. The first three arguments are the x, y, and z</span></span><br><span class="line"><span class="comment"># numeric vectors representing points. col= and size= control the color and </span></span><br><span class="line"><span class="comment"># size of the points respectively.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spinning 3d Scatterplot</span></span><br><span class="line"><span class="comment"># install.packages(&quot;rgl&quot;)</span></span><br><span class="line">library(rgl)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;rgl&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following object is masked from &#x27;package:plotrix&#x27;:</span><br><span class="line">## </span><br><span class="line">##     mtext3d</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attach(mtcars) </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 4):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 5):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 6):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 14):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 15):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 19):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot3d(wt, disp, mpg, col=<span class="string">&quot;red&quot;</span>, size=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another Spinning 3d Scatterplot</span></span><br><span class="line"><span class="comment"># install.packages(&quot;Rcmdr&quot;)</span></span><br><span class="line"><span class="comment"># library(Rcmdr)</span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># scatter3d(wt, disp, mpg)</span></span><br></pre></td></tr></table></figure>

<h1 id="高级绘图"><a href="#高级绘图" class="headerlink" title="高级绘图"></a>高级绘图</h1><h2 id="坐标轴和文本"><a href="#坐标轴和文本" class="headerlink" title="坐标轴和文本"></a>坐标轴和文本</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># par()              # view current settings</span></span><br><span class="line">opar &lt;- par()      <span class="comment"># make a copy of current settings</span></span><br><span class="line">par(col.lab=<span class="string">&quot;red&quot;</span>) <span class="comment"># red x and y labels </span></span><br><span class="line">hist(mtcars$mpg)   <span class="comment"># create a plot with these new settings </span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">hist(mtcars$mpg, col.lab=<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example of labeling points</span></span><br><span class="line">attach(mtcars)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 3):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 5):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 6):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 7):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 15):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 16):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 20):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plot(wt, mpg, main=<span class="string">&quot;Milage vs. Car Weight&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Weight&quot;</span>, ylab=<span class="string">&quot;Mileage&quot;</span>, pch=<span class="number">18</span>, col=<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">text(wt, mpg, row.names(mtcars), cex=<span class="number">0.6</span>, pos=<span class="number">4</span>, col=<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A Silly Axis Example</span></span><br><span class="line"><span class="comment"># specify the data </span></span><br><span class="line">x &lt;- <span class="built_in">c</span>(<span class="number">1</span>:<span class="number">10</span>); y &lt;- x; z &lt;- 10/x</span><br><span class="line"><span class="comment"># create extra margin room on the right for an axis </span></span><br><span class="line">par(mar=<span class="built_in">c</span>(<span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span>) + <span class="number">0.1</span>)</span><br><span class="line"><span class="comment"># plot x vs. y </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># add x vs. 1/x </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line">lines(x, z, type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>, lty=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># draw an axis on the left </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line">lines(x, z, type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">2</span>, at=x,labels=x, col.axis=<span class="string">&quot;red&quot;</span>, las=<span class="number">2</span>) </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># side:1=bottom, 2=left, 3=top, 4=right;</span></span><br><span class="line"><span class="comment"># las:labels are parallel (=0) or perpendicular(=2) to axis</span></span><br><span class="line"><span class="comment"># draw an axis on the right, with smaller text and ticks </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line">lines(x, z, type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">2</span>, at=x,labels=x, col.axis=<span class="string">&quot;red&quot;</span>, las=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">4</span>, at=z,labels=<span class="built_in">round</span>(z,digits=<span class="number">2</span>),</span><br><span class="line">  col.axis=<span class="string">&quot;blue&quot;</span>, las=<span class="number">2</span>, cex.axis=<span class="number">0.7</span>, tck=-<span class="number">.01</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add a title for the right axis </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line">lines(x, z, type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">2</span>, at=x,labels=x, col.axis=<span class="string">&quot;red&quot;</span>, las=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">4</span>, at=z,labels=<span class="built_in">round</span>(z,digits=<span class="number">2</span>),</span><br><span class="line">  col.axis=<span class="string">&quot;blue&quot;</span>, las=<span class="number">2</span>, cex.axis=<span class="number">0.7</span>, tck=-<span class="number">.01</span>)</span><br><span class="line">mtext(<span class="string">&quot;y=1/x&quot;</span>, side=<span class="number">4</span>, line=<span class="number">3</span>, cex.lab=<span class="number">1</span>,las=<span class="number">2</span>, col=<span class="string">&quot;blue&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add a main title and bottom and left axis labels </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line">lines(x, z, type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">2</span>, at=x,labels=x, col.axis=<span class="string">&quot;red&quot;</span>, las=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">4</span>, at=z,labels=<span class="built_in">round</span>(z,digits=<span class="number">2</span>),</span><br><span class="line">  col.axis=<span class="string">&quot;blue&quot;</span>, las=<span class="number">2</span>, cex.axis=<span class="number">0.7</span>, tck=-<span class="number">.01</span>)</span><br><span class="line">mtext(<span class="string">&quot;y=1/x&quot;</span>, side=<span class="number">4</span>, line=<span class="number">3</span>, cex.lab=<span class="number">1</span>,las=<span class="number">2</span>, col=<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">title(<span class="string">&quot;An Example of Creative Axes&quot;</span>, xlab=<span class="string">&quot;X values&quot;</span>,</span><br><span class="line">   ylab=<span class="string">&quot;Y=X&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add solid horizontal lines at y=1,5,7 </span></span><br><span class="line">plot(x, y,type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">21</span>, col=<span class="string">&quot;red&quot;</span>, </span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, lty=<span class="number">3</span>, xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;&quot;</span>)</span><br><span class="line">lines(x, z, type=<span class="string">&quot;b&quot;</span>, pch=<span class="number">22</span>, col=<span class="string">&quot;blue&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">2</span>, at=x,labels=x, col.axis=<span class="string">&quot;red&quot;</span>, las=<span class="number">2</span>)</span><br><span class="line">axis(<span class="number">4</span>, at=z,labels=<span class="built_in">round</span>(z,digits=<span class="number">2</span>),</span><br><span class="line">  col.axis=<span class="string">&quot;blue&quot;</span>, las=<span class="number">2</span>, cex.axis=<span class="number">0.7</span>, tck=-<span class="number">.01</span>)</span><br><span class="line">mtext(<span class="string">&quot;y=1/x&quot;</span>, side=<span class="number">4</span>, line=<span class="number">3</span>, cex.lab=<span class="number">1</span>,las=<span class="number">2</span>, col=<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">title(<span class="string">&quot;An Example of Creative Axes&quot;</span>, xlab=<span class="string">&quot;X values&quot;</span>,</span><br><span class="line">   ylab=<span class="string">&quot;Y=X&quot;</span>)</span><br><span class="line">abline(h=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>))</span><br><span class="line"><span class="comment"># add dashed blue verical lines at x = 1,3,5,7,9</span></span><br><span class="line">abline(v=seq(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>),lty=<span class="number">2</span>,col=<span class="string">&quot;blue&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Legend Example</span></span><br><span class="line">attach(mtcars)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 3):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 4):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 6):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 7):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 8):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 16):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 17):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 21):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">boxplot(mpg~cyl, main=<span class="string">&quot;Milage by Car Weight&quot;</span>,</span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, xlab=<span class="string">&quot;Milage&quot;</span>, horizontal=<span class="built_in">F</span>,</span><br><span class="line">   col=terrain.colors(<span class="number">3</span>))</span><br><span class="line">legend(<span class="string">&quot;topright&quot;</span>, inset=<span class="number">.01</span>, title=<span class="string">&quot;Number of Cylinders&quot;</span>,</span><br><span class="line">   <span class="built_in">c</span>(<span class="string">&quot;4&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;8&quot;</span>), fill=terrain.colors(<span class="number">3</span>), horiz=<span class="built_in">F</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">boxplot(mpg~cyl, main=<span class="string">&quot;Milage by Car Weight&quot;</span>,</span><br><span class="line">   yaxt=<span class="string">&quot;n&quot;</span>, xlab=<span class="string">&quot;Milage&quot;</span>, horizontal=<span class="literal">TRUE</span>,</span><br><span class="line">   col=terrain.colors(<span class="number">3</span>))</span><br><span class="line">legend(<span class="string">&quot;topright&quot;</span>, inset=<span class="number">.01</span>, title=<span class="string">&quot;Number of Cylinders&quot;</span>,</span><br><span class="line">   <span class="built_in">c</span>(<span class="string">&quot;4&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;8&quot;</span>), fill=terrain.colors(<span class="number">3</span>), horiz=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-8-11.png"><!-- --></p>
<h2 id="图形组合"><a href="#图形组合" class="headerlink" title="图形组合"></a>图形组合</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># # 4 figures arranged in 2 rows and 2 columns</span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># par(mfrow=c(2,2))</span></span><br><span class="line"><span class="comment"># plot(wt,mpg, main=&quot;Scatterplot of wt vs. mpg&quot;)</span></span><br><span class="line"><span class="comment"># plot(wt,disp, main=&quot;Scatterplot of wt vs disp&quot;)</span></span><br><span class="line"><span class="comment"># hist(wt, main=&quot;Histogram of wt&quot;)</span></span><br><span class="line"><span class="comment"># boxplot(wt, main=&quot;Boxplot of wt&quot;)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># # 3 figures arranged in 3 rows and 1 column</span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># par(mfrow=c(3,1)) </span></span><br><span class="line"><span class="comment"># hist(wt)</span></span><br><span class="line"><span class="comment"># hist(mpg)</span></span><br><span class="line"><span class="comment"># hist(disp)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># # One figure in row 1 and two figures in row 2</span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))</span></span><br><span class="line"><span class="comment"># hist(wt)</span></span><br><span class="line"><span class="comment"># hist(mpg)</span></span><br><span class="line"><span class="comment"># hist(disp)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># # One figure in row 1 and two figures in row 2</span></span><br><span class="line"><span class="comment"># # row 1 is 1/3 the height of row 2</span></span><br><span class="line"><span class="comment"># # column 2 is 1/4 the width of the column 1 </span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE), </span></span><br><span class="line"><span class="comment">#    widths=c(3,1), heights=c(1,2))</span></span><br><span class="line"><span class="comment"># hist(wt)</span></span><br><span class="line"><span class="comment"># hist(mpg)</span></span><br><span class="line"><span class="comment"># hist(disp)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add boxplots to a scatterplot</span></span><br><span class="line"><span class="comment"># par(fig=c(0,0.8,0,0.8), new=TRUE)</span></span><br><span class="line"><span class="comment"># plot(mtcars$wt, mtcars$mpg, xlab=&quot;Car Weight&quot;,</span></span><br><span class="line"><span class="comment">#   ylab=&quot;Miles Per Gallon&quot;)</span></span><br><span class="line"><span class="comment"># par(fig=c(0,0.8,0.55,1), new=TRUE)</span></span><br><span class="line"><span class="comment"># boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)</span></span><br><span class="line"><span class="comment"># par(fig=c(0.65,1,0,0.8),new=TRUE)</span></span><br><span class="line"><span class="comment"># boxplot(mtcars$mpg, axes=FALSE)</span></span><br><span class="line"><span class="comment"># mtext(&quot;Enhanced Scatterplot&quot;, side=3, outer=TRUE, line=-3)</span></span><br></pre></td></tr></table></figure>

<h2 id="Lattice-绘图"><a href="#Lattice-绘图" class="headerlink" title="Lattice 绘图"></a>Lattice 绘图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Lattice Examples </span></span><br><span class="line">library(lattice) </span><br><span class="line">attach(mtcars)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 3):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 4):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 5):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 7):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 8):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 9):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 17):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 18):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from mtcars (pos = 22):</span><br><span class="line">## </span><br><span class="line">##     am, carb, cyl, disp, drat, gear, hp, mpg, qsec, vs, wt</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create factors with value labels </span></span><br><span class="line">gear.f&lt;-factor(gear,levels=<span class="built_in">c</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),</span><br><span class="line">   labels=<span class="built_in">c</span>(<span class="string">&quot;3gears&quot;</span>,<span class="string">&quot;4gears&quot;</span>,<span class="string">&quot;5gears&quot;</span>)) </span><br><span class="line">cyl.f &lt;-factor(cyl,levels=<span class="built_in">c</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>),</span><br><span class="line">   labels=<span class="built_in">c</span>(<span class="string">&quot;4cyl&quot;</span>,<span class="string">&quot;6cyl&quot;</span>,<span class="string">&quot;8cyl&quot;</span>)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># kernel density plot </span></span><br><span class="line">densityplot(~mpg, </span><br><span class="line">   main=<span class="string">&quot;Density Plot&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Miles per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kernel density plots by factor level </span></span><br><span class="line">densityplot(~mpg|cyl.f, </span><br><span class="line">   main=<span class="string">&quot;Density Plot by Number of Cylinders&quot;</span>,</span><br><span class="line">   xlab=<span class="string">&quot;Miles per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kernel density plots by factor level (alternate layout) </span></span><br><span class="line">densityplot(~mpg|cyl.f, </span><br><span class="line">   main=<span class="string">&quot;Density Plot by Numer of Cylinders&quot;</span>,</span><br><span class="line">   xlab=<span class="string">&quot;Miles per Gallon&quot;</span>, </span><br><span class="line">   layout=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># boxplots for each combination of two factors </span></span><br><span class="line">bwplot(cyl.f~mpg|gear.f,</span><br><span class="line">   ylab=<span class="string">&quot;Cylinders&quot;</span>, xlab=<span class="string">&quot;Miles per Gallon&quot;</span>, </span><br><span class="line">   main=<span class="string">&quot;Mileage by Cylinders and Gears&quot;</span>, </span><br><span class="line">   layout=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># scatterplots for each combination of two factors </span></span><br><span class="line">xyplot(mpg~wt|cyl.f*gear.f, </span><br><span class="line">   main=<span class="string">&quot;Scatterplots by Cylinders and Gears&quot;</span>, </span><br><span class="line">   ylab=<span class="string">&quot;Miles per Gallon&quot;</span>, xlab=<span class="string">&quot;Car Weight&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3d scatterplot by factor level </span></span><br><span class="line">cloud(mpg~wt*qsec|cyl.f, </span><br><span class="line">   main=<span class="string">&quot;3D Scatterplot by Cylinders&quot;</span>) </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dotplot for each combination of two factors </span></span><br><span class="line">dotplot(cyl.f~mpg|gear.f, </span><br><span class="line">   main=<span class="string">&quot;Dotplot Plot by Number of Gears and Cylinders&quot;</span>,</span><br><span class="line">   xlab=<span class="string">&quot;Miles Per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># scatterplot matrix </span></span><br><span class="line">splom(mtcars[<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)], </span><br><span class="line">   main=<span class="string">&quot;MTCARS Data&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-10-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Customized Lattice Example</span></span><br><span class="line"><span class="comment"># library(lattice)</span></span><br><span class="line"><span class="comment"># panel.smoother &lt;- function(x, y) &#123;</span></span><br><span class="line"><span class="comment">#   panel.xyplot(x, y) # show points </span></span><br><span class="line"><span class="comment">#   panel.loess(x, y)  # show smoothed line </span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># attach(mtcars)</span></span><br><span class="line"><span class="comment"># hp &lt;- cut(hp,3) # divide horse power into three bands </span></span><br><span class="line"><span class="comment"># xyplot(mpg~wt|hp, scales=list(cex=.8, col=&quot;red&quot;),</span></span><br><span class="line"><span class="comment">#    panel=panel.smoother,</span></span><br><span class="line"><span class="comment">#    xlab=&quot;Weight&quot;, ylab=&quot;Miles per Gallon&quot;, </span></span><br><span class="line"><span class="comment">#    main=&quot;MGP vs Weight by Horse Power&quot;)</span></span><br></pre></td></tr></table></figure>

<h2 id="ggplot2绘图"><a href="#ggplot2绘图" class="headerlink" title="ggplot2绘图"></a>ggplot2绘图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ggplot2 examples</span></span><br><span class="line">library(ggplot2) </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;ggplot2&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following object is masked from &#x27;mtcars&#x27;:</span><br><span class="line">## </span><br><span class="line">##     mpg</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create factors with value labels </span></span><br><span class="line">data(mtcars)</span><br><span class="line">mtcars$gear &lt;- factor(mtcars$gear,levels=<span class="built_in">c</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),</span><br><span class="line">   labels=<span class="built_in">c</span>(<span class="string">&quot;3gears&quot;</span>,<span class="string">&quot;4gears&quot;</span>,<span class="string">&quot;5gears&quot;</span>)) </span><br><span class="line">mtcars$am &lt;- factor(mtcars$am,levels=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">1</span>),</span><br><span class="line">   labels=<span class="built_in">c</span>(<span class="string">&quot;Automatic&quot;</span>,<span class="string">&quot;Manual&quot;</span>)) </span><br><span class="line">mtcars$cyl &lt;- factor(mtcars$cyl,levels=<span class="built_in">c</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>),</span><br><span class="line">   labels=<span class="built_in">c</span>(<span class="string">&quot;4cyl&quot;</span>,<span class="string">&quot;6cyl&quot;</span>,<span class="string">&quot;8cyl&quot;</span>)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># Kernel density plots for mpg</span></span><br><span class="line"><span class="comment"># grouped by number of gears (indicated by color)</span></span><br><span class="line">qplot(mpg, data=mtcars, geom=<span class="string">&quot;density&quot;</span>, fill=gear, alpha=I(<span class="number">.5</span>), </span><br><span class="line">   main=<span class="string">&quot;Distribution of Gas Milage&quot;</span>, xlab=<span class="string">&quot;Miles Per Gallon&quot;</span>, </span><br><span class="line">   ylab=<span class="string">&quot;Density&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-11-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Scatterplot of mpg vs. hp for each combination of gears and cylinders</span></span><br><span class="line"><span class="comment"># in each facet, transmittion type is represented by shape and color</span></span><br><span class="line">qplot(hp, mpg, data=mtcars, shape=am, color=am, </span><br><span class="line">   facets=gear~cyl, size=I(<span class="number">3</span>),</span><br><span class="line">   xlab=<span class="string">&quot;Horsepower&quot;</span>, ylab=<span class="string">&quot;Miles per Gallon&quot;</span>) </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-11-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Separate regressions of mpg on weight for each number of cylinders</span></span><br><span class="line">qplot(wt, mpg, data=mtcars, geom=<span class="built_in">c</span>(<span class="string">&quot;point&quot;</span>, <span class="string">&quot;smooth&quot;</span>), </span><br><span class="line">   method=<span class="string">&quot;lm&quot;</span>, formula=y~x, color=cyl, </span><br><span class="line">   main=<span class="string">&quot;Regression of MPG on Weight&quot;</span>, </span><br><span class="line">   xlab=<span class="string">&quot;Weight&quot;</span>, ylab=<span class="string">&quot;Miles per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Warning: Ignoring unknown parameters: method, formula</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-11-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Boxplots of mpg by number of gears </span></span><br><span class="line"><span class="comment"># observations (points) are overlayed and jittered</span></span><br><span class="line">qplot(gear, mpg, data=mtcars, geom=<span class="built_in">c</span>(<span class="string">&quot;boxplot&quot;</span>, <span class="string">&quot;jitter&quot;</span>), </span><br><span class="line">   fill=gear, main=<span class="string">&quot;Mileage by Gear Number&quot;</span>,</span><br><span class="line">   xlab=<span class="string">&quot;&quot;</span>, ylab=<span class="string">&quot;Miles per Gallon&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-11-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Customizing ggplot2 Graphs</span></span><br><span class="line">p &lt;- qplot(hp, mpg, data=mtcars, shape=am, color=am, </span><br><span class="line">   facets=gear~cyl, main=<span class="string">&quot;Scatterplots of MPG vs. Horsepower&quot;</span>,</span><br><span class="line">   xlab=<span class="string">&quot;Horsepower&quot;</span>, ylab=<span class="string">&quot;Miles per Gallon&quot;</span>)</span><br><span class="line"><span class="comment"># White background and black grid lines</span></span><br><span class="line">p + theme_bw()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-11-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Large brown bold italics labels</span></span><br><span class="line"><span class="comment"># and legend placed at top of plot</span></span><br><span class="line">p + theme(axis.title=element_text(face=<span class="string">&quot;bold.italic&quot;</span>, </span><br><span class="line">   size=<span class="string">&quot;12&quot;</span>, color=<span class="string">&quot;brown&quot;</span>), legend.position=<span class="string">&quot;top&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-11-6.png"><!-- --></p>
<h2 id="概率图"><a href="#概率图" class="headerlink" title="概率图"></a>概率图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Display the Student&#x27;s t distributions with various</span></span><br><span class="line"><span class="comment"># degrees of freedom and compare to the normal distribution</span></span><br><span class="line"></span><br><span class="line">x &lt;- seq(-<span class="number">4</span>, <span class="number">4</span>, <span class="built_in">length</span>=<span class="number">100</span>)</span><br><span class="line">hx &lt;- dnorm(x)</span><br><span class="line"></span><br><span class="line">degf &lt;- <span class="built_in">c</span>(<span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">30</span>)</span><br><span class="line">colors &lt;- <span class="built_in">c</span>(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;darkgreen&quot;</span>, <span class="string">&quot;gold&quot;</span>, <span class="string">&quot;black&quot;</span>)</span><br><span class="line">labels &lt;- <span class="built_in">c</span>(<span class="string">&quot;df=1&quot;</span>, <span class="string">&quot;df=3&quot;</span>, <span class="string">&quot;df=8&quot;</span>, <span class="string">&quot;df=30&quot;</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line"></span><br><span class="line">plot(x, hx, type=<span class="string">&quot;l&quot;</span>, lty=<span class="number">2</span>, xlab=<span class="string">&quot;x value&quot;</span>,</span><br><span class="line">  ylab=<span class="string">&quot;Density&quot;</span>, main=<span class="string">&quot;Comparison of t Distributions&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">4</span>)&#123;</span><br><span class="line">  lines(x, dt(x,degf[i]), lwd=<span class="number">2</span>, col=colors[i])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">legend(<span class="string">&quot;topright&quot;</span>, inset=<span class="number">.05</span>, title=<span class="string">&quot;Distributions&quot;</span>,</span><br><span class="line">  labels, lwd=<span class="number">2</span>, lty=<span class="built_in">c</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>), col=colors)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-12-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Children&#x27;s IQ scores are normally distributed with a</span></span><br><span class="line"><span class="comment"># mean of 100 and a standard deviation of 15. What</span></span><br><span class="line"><span class="comment"># proportion of children are expected to have an IQ between</span></span><br><span class="line"><span class="comment"># 80 and 120?</span></span><br><span class="line"></span><br><span class="line">mean=<span class="number">100</span>; sd=<span class="number">15</span></span><br><span class="line">lb=<span class="number">80</span>; ub=<span class="number">120</span></span><br><span class="line"></span><br><span class="line">x &lt;- seq(-<span class="number">4</span>,<span class="number">4</span>,<span class="built_in">length</span>=<span class="number">100</span>)*sd + mean</span><br><span class="line">hx &lt;- dnorm(x,mean,sd)</span><br><span class="line"></span><br><span class="line">plot(x, hx, type=<span class="string">&quot;n&quot;</span>, xlab=<span class="string">&quot;IQ Values&quot;</span>, ylab=<span class="string">&quot;&quot;</span>,</span><br><span class="line">  main=<span class="string">&quot;Normal Distribution&quot;</span>, axes=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">i &lt;- x &gt;= lb &amp; x &lt;= ub</span><br><span class="line">lines(x, hx)</span><br><span class="line">polygon(<span class="built_in">c</span>(lb,x[i],ub), <span class="built_in">c</span>(<span class="number">0</span>,hx[i],<span class="number">0</span>), col=<span class="string">&quot;red&quot;</span>) </span><br><span class="line"></span><br><span class="line">area &lt;- pnorm(ub, mean, sd) - pnorm(lb, mean, sd)</span><br><span class="line">result &lt;- paste(<span class="string">&quot;P(&quot;</span>,lb,<span class="string">&quot;&lt; IQ &lt;&quot;</span>,ub,<span class="string">&quot;) =&quot;</span>,</span><br><span class="line">   <span class="built_in">signif</span>(area, digits=<span class="number">3</span>))</span><br><span class="line">mtext(result,<span class="number">3</span>)</span><br><span class="line">axis(<span class="number">1</span>, at=seq(<span class="number">40</span>, <span class="number">160</span>, <span class="number">20</span>), pos=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-12-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Q-Q plots</span></span><br><span class="line">par(mfrow=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># create sample data </span></span><br><span class="line">x &lt;- rt(<span class="number">100</span>, df=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># normal fit </span></span><br><span class="line">qqnorm(x); qqline(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># t(3Df) fit </span></span><br><span class="line">qqplot(rt(<span class="number">1000</span>,df=<span class="number">3</span>), x, main=<span class="string">&quot;t(3) Q-Q Plot&quot;</span>, </span><br><span class="line">   ylab=<span class="string">&quot;Sample Quantiles&quot;</span>)</span><br><span class="line">abline(<span class="number">0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-12-3.png"><!-- --></p>
<h2 id="马赛克图"><a href="#马赛克图" class="headerlink" title="马赛克图"></a>马赛克图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!require(vcd)) install.packages(<span class="string">&quot;vcd&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Loading required package: vcd</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Loading required package: grid</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(vcd)</span><br><span class="line">mosaic(HairEyeColor, shade=<span class="literal">TRUE</span>, legend=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-13-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Association Plot Example</span></span><br><span class="line">library(vcd)</span><br><span class="line">assoc(HairEyeColor, shade=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-13-2.png"><!-- --></p>
<h2 id="相关图"><a href="#相关图" class="headerlink" title="相关图"></a>相关图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># First Correlogram Example</span></span><br><span class="line"><span class="keyword">if</span> (!require(corrgram)) install.packages(<span class="string">&quot;corrgramy&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Loading required package: corrgram</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Registered S3 method overwritten by &#x27;seriation&#x27;:</span><br><span class="line">##   method         from </span><br><span class="line">##   reorder.hclust gclus</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;corrgram&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following object is masked from &#x27;package:lattice&#x27;:</span><br><span class="line">## </span><br><span class="line">##     panel.fill</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(corrgram)</span><br><span class="line">corrgram(mtcars, order=<span class="literal">TRUE</span>, lower.panel=panel.shade,</span><br><span class="line">  upper.panel=panel.pie, text.panel=panel.txt,</span><br><span class="line">  main=<span class="string">&quot;Car Milage Data in PC2/PC1 Order&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-14-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Second Correlogram Example</span></span><br><span class="line">library(corrgram)</span><br><span class="line">corrgram(mtcars, order=<span class="literal">TRUE</span>, lower.panel=panel.ellipse,</span><br><span class="line">  upper.panel=panel.pts, text.panel=panel.txt,</span><br><span class="line">  diag.panel=panel.minmax, </span><br><span class="line">  main=<span class="string">&quot;Car Mileage Data in PC2/PC1 Order&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-14-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Third Correlogram Example</span></span><br><span class="line">library(corrgram)</span><br><span class="line">corrgram(mtcars, order=<span class="literal">NULL</span>, lower.panel=panel.shade,</span><br><span class="line">  upper.panel=<span class="literal">NULL</span>, text.panel=panel.txt,</span><br><span class="line">  main=<span class="string">&quot;Car Milage Data (unsorted)&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-14-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Changing Colors in a Correlogram</span></span><br><span class="line">library(corrgram) </span><br><span class="line">col.corrgram &lt;- <span class="keyword">function</span>(ncol)&#123;   </span><br><span class="line">  colorRampPalette(<span class="built_in">c</span>(<span class="string">&quot;darkgoldenrod4&quot;</span>, <span class="string">&quot;burlywood1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;darkkhaki&quot;</span>, <span class="string">&quot;darkgreen&quot;</span>))(ncol)&#125; </span><br><span class="line">corrgram(mtcars, order=<span class="literal">TRUE</span>, lower.panel=panel.shade, </span><br><span class="line">   upper.panel=panel.pie, text.panel=panel.txt, </span><br><span class="line">   main=<span class="string">&quot;Correlogram of Car Mileage Data (PC2/PC1 Order)&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-14-4.png"><!-- --></p>
<h2 id="交互图"><a href="#交互图" class="headerlink" title="交互图"></a>交互图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if (!require(rggobi)) install.packages(&quot;rggobiy&quot;)</span></span><br><span class="line"><span class="comment"># library(rggobi)</span></span><br><span class="line"><span class="comment"># g &lt;- ggobi(mydata)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install iplots</span></span><br><span class="line"><span class="comment"># if (!require(rggobi)) install.packages(&quot;iplots&quot;,dep=TRUE)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># # Create some linked plots </span></span><br><span class="line"><span class="comment"># library(iplots)</span></span><br><span class="line"><span class="comment"># cyl.f &lt;- factor(mtcars$cyl)</span></span><br><span class="line"><span class="comment"># gear.f &lt;- factor(mtcars$factor) </span></span><br><span class="line"><span class="comment"># attach(mtcars) </span></span><br><span class="line"><span class="comment"># ihist(mpg) # histogram </span></span><br><span class="line"><span class="comment"># ibar(carb) # barchart</span></span><br><span class="line"><span class="comment"># iplot(mpg, wt) # scatter plot</span></span><br><span class="line"><span class="comment"># ibox(mtcars[c(&quot;qsec&quot;,&quot;disp&quot;,&quot;hp&quot;)]) # boxplots </span></span><br><span class="line"><span class="comment"># ipcp(mtcars[c(&quot;mpg&quot;,&quot;wt&quot;,&quot;hp&quot;)]) # parallel coordinates</span></span><br><span class="line"><span class="comment"># imosaic(cyl.f,gear.f) # mosaic plot</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># # Interacting with a scatterplot </span></span><br><span class="line"><span class="comment"># attach(mydata)</span></span><br><span class="line"><span class="comment"># plot(x, y) # scatterplot</span></span><br><span class="line"><span class="comment"># identify(x, y, labels=row.names(mydata)) # identify points </span></span><br><span class="line"><span class="comment"># coords &lt;- locator(type=&quot;l&quot;) # add lines</span></span><br><span class="line"><span class="comment"># coords # display list</span></span><br></pre></td></tr></table></figure>

<h1 id="ggplot2-绘图详解"><a href="#ggplot2-绘图详解" class="headerlink" title="ggplot2 绘图详解"></a>ggplot2 绘图详解</h1><h2 id="条形图和折线图"><a href="#条形图和折线图" class="headerlink" title="条形图和折线图"></a>条形图和折线图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- data.frame(</span><br><span class="line">  time = factor(<span class="built_in">c</span>(<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>), levels=<span class="built_in">c</span>(<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>)),</span><br><span class="line">  total_bill = <span class="built_in">c</span>(<span class="number">14.89</span>, <span class="number">17.23</span>)</span><br><span class="line">)</span><br><span class="line">dat</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##     time total_bill</span><br><span class="line">## 1  Lunch      14.89</span><br><span class="line">## 2 Dinner      17.23</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;     time total_bill</span></span><br><span class="line"><span class="comment">#&gt; 1  Lunch      14.89</span></span><br><span class="line"><span class="comment">#&gt; 2 Dinner      17.23</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the ggplot2 package</span></span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># Very basic bar graph</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Map the time of day to different fill colors</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## This would have the same result as above</span></span><br><span class="line"><span class="comment"># ggplot(data=dat, aes(x=time, y=total_bill)) +</span></span><br><span class="line"><span class="comment">#    geom_bar(aes(fill=time), stat=&quot;identity&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a black outline</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) +</span><br><span class="line">    geom_bar(colour=<span class="string">&quot;black&quot;</span>, stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># No legend, since the information is redundant</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) +</span><br><span class="line">    geom_bar(colour=<span class="string">&quot;black&quot;</span>, stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    guides(fill=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add title, narrower bars, fill color, and change axis labels</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) + </span><br><span class="line">    geom_bar(colour=<span class="string">&quot;black&quot;</span>, fill=<span class="string">&quot;#DD8888&quot;</span>, width=<span class="number">.8</span>, stat=<span class="string">&quot;identity&quot;</span>) + </span><br><span class="line">    guides(fill=<span class="literal">FALSE</span>) +</span><br><span class="line">    xlab(<span class="string">&quot;Time of day&quot;</span>) + ylab(<span class="string">&quot;Total bill&quot;</span>) +</span><br><span class="line">    ggtitle(<span class="string">&quot;Average bill for 2 people&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(reshape2)</span><br><span class="line"><span class="comment"># Look at fist several rows</span></span><br><span class="line">head(tips)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   total_bill  tip    sex smoker day   time size</span><br><span class="line">## 1      16.99 1.01 Female     No Sun Dinner    2</span><br><span class="line">## 2      10.34 1.66   Male     No Sun Dinner    3</span><br><span class="line">## 3      21.01 3.50   Male     No Sun Dinner    3</span><br><span class="line">## 4      23.68 3.31   Male     No Sun Dinner    2</span><br><span class="line">## 5      24.59 3.61 Female     No Sun Dinner    4</span><br><span class="line">## 6      25.29 4.71   Male     No Sun Dinner    4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(data=tips, aes(x=day)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;count&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Equivalent to this, since stat=&quot;bin&quot; is the default:</span></span><br><span class="line"><span class="comment"># ggplot(data=tips, aes(x=day)) +</span></span><br><span class="line"><span class="comment">#    geom_bar()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Basic line graph</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, group=<span class="number">1</span>)) +</span><br><span class="line">    geom_line()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## This would have the same result as above</span></span><br><span class="line"><span class="comment"># ggplot(data=dat, aes(x=time, y=total_bill)) +</span></span><br><span class="line"><span class="comment">#     geom_line(aes(group=1))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add points</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, group=<span class="number">1</span>)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Change color of both line and points</span></span><br><span class="line"><span class="comment"># Change line type and point type, and use thicker line and larger points</span></span><br><span class="line"><span class="comment"># Change points to circles with white fill</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, group=<span class="number">1</span>)) + </span><br><span class="line">    geom_line(colour=<span class="string">&quot;red&quot;</span>, linetype=<span class="string">&quot;dashed&quot;</span>, size=<span class="number">1.5</span>) + </span><br><span class="line">    geom_point(colour=<span class="string">&quot;red&quot;</span>, size=<span class="number">4</span>, shape=<span class="number">21</span>, fill=<span class="string">&quot;white&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Change the y-range to go from 0 to the maximum value in the total_bill column,</span></span><br><span class="line"><span class="comment"># and change axis labels</span></span><br><span class="line">ggplot(data=dat, aes(x=time, y=total_bill, group=<span class="number">1</span>)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point() +</span><br><span class="line">    expand_limits(y=<span class="number">0</span>) +</span><br><span class="line">    xlab(<span class="string">&quot;Time of day&quot;</span>) + ylab(<span class="string">&quot;Total bill&quot;</span>) +</span><br><span class="line">    ggtitle(<span class="string">&quot;Average bill for 2 people&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat1 &lt;- data.frame(</span><br><span class="line">    sex = factor(<span class="built_in">c</span>(<span class="string">&quot;Female&quot;</span>,<span class="string">&quot;Female&quot;</span>,<span class="string">&quot;Male&quot;</span>,<span class="string">&quot;Male&quot;</span>)),</span><br><span class="line">    time = factor(<span class="built_in">c</span>(<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>,<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>), levels=<span class="built_in">c</span>(<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>)),</span><br><span class="line">    total_bill = <span class="built_in">c</span>(<span class="number">13.53</span>, <span class="number">16.81</span>, <span class="number">16.24</span>, <span class="number">17.42</span>)</span><br><span class="line">)</span><br><span class="line">dat1</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##      sex   time total_bill</span><br><span class="line">## 1 Female  Lunch      13.53</span><br><span class="line">## 2 Female Dinner      16.81</span><br><span class="line">## 3   Male  Lunch      16.24</span><br><span class="line">## 4   Male Dinner      17.42</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bar graph, time on x-axis, color fill grouped by sex -- use position_dodge()</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>, position=position_dodge())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>, position=position_dodge(), colour=<span class="string">&quot;black&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Change colors</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>, position=position_dodge(), colour=<span class="string">&quot;black&quot;</span>) +</span><br><span class="line">    scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">&quot;#999999&quot;</span>, <span class="string">&quot;#E69F00&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-14.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bar graph, time on x-axis, color fill grouped by sex -- use position_dodge()</span></span><br><span class="line">ggplot(data=dat1, aes(x=sex, y=total_bill, fill=time)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>, position=position_dodge(), colour=<span class="string">&quot;black&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-15.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Basic line graph with points</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, group=sex)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-16.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Map sex to color</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, group=sex, colour=sex)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-17.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Map sex to different point shape, and use larger points</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, group=sex, shape=sex)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-18.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use thicker lines and larger points, and hollow white-filled points</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, group=sex, shape=sex)) + </span><br><span class="line">    geom_line(size=<span class="number">1.5</span>) + </span><br><span class="line">    geom_point(size=<span class="number">3</span>, fill=<span class="string">&quot;white&quot;</span>) +</span><br><span class="line">    scale_shape_manual(values=<span class="built_in">c</span>(<span class="number">22</span>,<span class="number">21</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-19.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(data=dat1, aes(x=sex, y=total_bill, group=time, shape=time, color=time)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-20.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A bar graph</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, fill=sex)) + </span><br><span class="line">    geom_bar(colour=<span class="string">&quot;black&quot;</span>, stat=<span class="string">&quot;identity&quot;</span>,</span><br><span class="line">             position=position_dodge(),</span><br><span class="line">             size=<span class="number">.3</span>) +                        <span class="comment"># Thinner lines</span></span><br><span class="line">    scale_fill_hue(name=<span class="string">&quot;Sex of payer&quot;</span>) +      <span class="comment"># Set legend title</span></span><br><span class="line">    xlab(<span class="string">&quot;Time of day&quot;</span>) + ylab(<span class="string">&quot;Total bill&quot;</span>) + <span class="comment"># Set axis labels</span></span><br><span class="line">    ggtitle(<span class="string">&quot;Average bill for 2 people&quot;</span>) +     <span class="comment"># Set title</span></span><br><span class="line">    theme_bw()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-21.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A line graph</span></span><br><span class="line">ggplot(data=dat1, aes(x=time, y=total_bill, group=sex, shape=sex, colour=sex)) + </span><br><span class="line">    geom_line(aes(linetype=sex), size=<span class="number">1</span>) +     <span class="comment"># Set linetype by sex</span></span><br><span class="line">    geom_point(size=<span class="number">3</span>, fill=<span class="string">&quot;white&quot;</span>) +         <span class="comment"># Use larger points, fill with white</span></span><br><span class="line">    expand_limits(y=<span class="number">0</span>) +                       <span class="comment"># Set y range to include 0</span></span><br><span class="line">    scale_colour_hue(name=<span class="string">&quot;Sex of payer&quot;</span>,      <span class="comment"># Set legend title</span></span><br><span class="line">                     l=<span class="number">30</span>)  +                  <span class="comment"># Use darker colors (lightness=30)</span></span><br><span class="line">    scale_shape_manual(name=<span class="string">&quot;Sex of payer&quot;</span>,</span><br><span class="line">                       values=<span class="built_in">c</span>(<span class="number">22</span>,<span class="number">21</span>)) +      <span class="comment"># Use points with a fill color</span></span><br><span class="line">    scale_linetype_discrete(name=<span class="string">&quot;Sex of payer&quot;</span>) +</span><br><span class="line">    xlab(<span class="string">&quot;Time of day&quot;</span>) + ylab(<span class="string">&quot;Total bill&quot;</span>) + <span class="comment"># Set axis labels</span></span><br><span class="line">    ggtitle(<span class="string">&quot;Average bill for 2 people&quot;</span>) +     <span class="comment"># Set title</span></span><br><span class="line">    theme_bw() +</span><br><span class="line">    theme(legend.position=<span class="built_in">c</span>(<span class="number">.7</span>, <span class="number">.4</span>))           <span class="comment"># Position legend inside</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-22.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">                                               <span class="comment"># This must go after theme_bw</span></span><br><span class="line"></span><br><span class="line">datn &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">supp dose length</span></span><br><span class="line"><span class="string">  OJ  0.5  13.23</span></span><br><span class="line"><span class="string">  OJ  1.0  22.70</span></span><br><span class="line"><span class="string">  OJ  2.0  26.06</span></span><br><span class="line"><span class="string">  VC  0.5   7.98</span></span><br><span class="line"><span class="string">  VC  1.0  16.77</span></span><br><span class="line"><span class="string">  VC  2.0  26.14</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ggplot(data=datn, aes(x=dose, y=<span class="built_in">length</span>, group=supp, colour=supp)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-23.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Copy the data frame and convert dose to a factor</span></span><br><span class="line">datn2 &lt;- datn</span><br><span class="line">datn2$dose &lt;- factor(datn2$dose)</span><br><span class="line">ggplot(data=datn2, aes(x=dose, y=<span class="built_in">length</span>, group=supp, colour=supp)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-24.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use the original data frame, but put factor() directly in the plot specification</span></span><br><span class="line">ggplot(data=datn, aes(x=factor(dose), y=<span class="built_in">length</span>, group=supp, colour=supp)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-25.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use datn2 from above</span></span><br><span class="line">ggplot(data=datn2, aes(x=dose, y=<span class="built_in">length</span>, fill=supp)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>, position=position_dodge())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-26.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use the original data frame, but put factor() directly in the plot specification</span></span><br><span class="line">ggplot(data=datn, aes(x=factor(dose), y=<span class="built_in">length</span>, fill=supp)) +</span><br><span class="line">    geom_bar(stat=<span class="string">&quot;identity&quot;</span>, position=position_dodge())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-16-27.png"><!-- --></p>
<h2 id="绘制均值及误差线"><a href="#绘制均值及误差线" class="headerlink" title="绘制均值及误差线"></a>绘制均值及误差线</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tg &lt;- ToothGrowth</span><br><span class="line">head(tg)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##    len supp dose</span><br><span class="line">## 1  4.2   VC  0.5</span><br><span class="line">## 2 11.5   VC  0.5</span><br><span class="line">## 3  7.3   VC  0.5</span><br><span class="line">## 4  5.8   VC  0.5</span><br><span class="line">## 5  6.4   VC  0.5</span><br><span class="line">## 6 10.0   VC  0.5</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;    len supp dose</span></span><br><span class="line"><span class="comment">#&gt; 1  4.2   VC  0.5</span></span><br><span class="line"><span class="comment">#&gt; 2 11.5   VC  0.5</span></span><br><span class="line"><span class="comment">#&gt; 3  7.3   VC  0.5</span></span><br><span class="line"><span class="comment">#&gt; 4  5.8   VC  0.5</span></span><br><span class="line"><span class="comment">#&gt; 5  6.4   VC  0.5</span></span><br><span class="line"><span class="comment">#&gt; 6 10.0   VC  0.5</span></span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line">summarySE &lt;- <span class="keyword">function</span>(data=<span class="literal">NULL</span>, measurevar, groupvars=<span class="literal">NULL</span>, na.rm=<span class="literal">FALSE</span>,</span><br><span class="line">                      conf.interval=<span class="number">.95</span>, .drop=<span class="literal">TRUE</span>) &#123;</span><br><span class="line">library(plyr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># New version of length which can handle NA&#x27;s: if na.rm==T, don&#x27;t count them</span></span><br><span class="line">length2 &lt;- <span class="keyword">function</span> (x, na.rm=<span class="literal">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (na.rm) <span class="built_in">sum</span>(!<span class="built_in">is.na</span>(x))</span><br><span class="line">        <span class="keyword">else</span>       <span class="built_in">length</span>(x)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># This does the summary. For each group&#x27;s data frame, return a vector with</span></span><br><span class="line"><span class="comment"># N, mean, and sd</span></span><br><span class="line">    datac &lt;- ddply(data, groupvars, .drop=.drop,</span><br><span class="line">      .fun = <span class="keyword">function</span>(xx, col) &#123;</span><br><span class="line">        <span class="built_in">c</span>(N    = length2(xx[[col]], na.rm=na.rm),</span><br><span class="line">          mean = mean   (xx[[col]], na.rm=na.rm),</span><br><span class="line">          sd   = sd     (xx[[col]], na.rm=na.rm)</span><br><span class="line">        )</span><br><span class="line">      &#125;,</span><br><span class="line">      measurevar</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rename the &quot;mean&quot; column    </span></span><br><span class="line">datac &lt;- rename(datac, <span class="built_in">c</span>(<span class="string">&quot;mean&quot;</span> = measurevar))</span><br><span class="line"></span><br><span class="line">datac$se &lt;- datac$sd / <span class="built_in">sqrt</span>(datac$N)  <span class="comment"># Calculate standard error of the mean</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Confidence interval multiplier for standard error</span></span><br><span class="line"><span class="comment"># Calculate t-statistic for confidence interval: </span></span><br><span class="line"><span class="comment"># e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1</span></span><br><span class="line">ciMult &lt;- qt(conf.interval/<span class="number">2</span> + <span class="number">.5</span>, datac$N-<span class="number">1</span>)</span><br><span class="line">datac$ci &lt;- datac$se * ciMult</span><br><span class="line"><span class="built_in">return</span>(datac)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">normDataWithin &lt;- <span class="keyword">function</span>(data=<span class="literal">NULL</span>, idvar, measurevar, betweenvars=<span class="literal">NULL</span>,</span><br><span class="line">                           na.rm=<span class="literal">FALSE</span>, .drop=<span class="literal">TRUE</span>) &#123;</span><br><span class="line">    library(plyr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Measure var on left, idvar + between vars on right of formula.</span></span><br><span class="line">    data.subjMean &lt;- ddply(data, <span class="built_in">c</span>(idvar, betweenvars), .drop=.drop,</span><br><span class="line">     .fun = <span class="keyword">function</span>(xx, col, na.rm) &#123;</span><br><span class="line">        <span class="built_in">c</span>(subjMean = mean(xx[,col], na.rm=na.rm))</span><br><span class="line">      &#125;,</span><br><span class="line">      measurevar,</span><br><span class="line">      na.rm</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Put the subject means with original data</span></span><br><span class="line">    data &lt;- merge(data, data.subjMean)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get the normalized data in a new column</span></span><br><span class="line">    measureNormedVar &lt;- paste(measurevar, <span class="string">&quot;_norm&quot;</span>, sep=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    data[,measureNormedVar] &lt;- data[,measurevar] - data[,<span class="string">&quot;subjMean&quot;</span>] +</span><br><span class="line">                               mean(data[,measurevar], na.rm=na.rm)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Remove this subject mean column</span></span><br><span class="line">    data$subjMean &lt;- <span class="literal">NULL</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">summarySEwithin &lt;- <span class="keyword">function</span>(data=<span class="literal">NULL</span>, measurevar, betweenvars=<span class="literal">NULL</span>, withinvars=<span class="literal">NULL</span>,</span><br><span class="line">                            idvar=<span class="literal">NULL</span>, na.rm=<span class="literal">FALSE</span>, conf.interval=<span class="number">.95</span>, .drop=<span class="literal">TRUE</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Ensure that the betweenvars and withinvars are factors</span></span><br><span class="line">  factorvars &lt;- vapply(data[, <span class="built_in">c</span>(betweenvars, withinvars), drop=<span class="literal">FALSE</span>],</span><br><span class="line">    FUN=is.factor, FUN.VALUE=logical(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">all</span>(factorvars)) &#123;</span><br><span class="line">    nonfactorvars &lt;- <span class="built_in">names</span>(factorvars)[!factorvars]</span><br><span class="line">    message(<span class="string">&quot;Automatically converting the following non-factors to factors: &quot;</span>,</span><br><span class="line">            paste(nonfactorvars, collapse = <span class="string">&quot;, &quot;</span>))</span><br><span class="line">    data[nonfactorvars] &lt;- lapply(data[nonfactorvars], factor)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Get the means from the un-normed data</span></span><br><span class="line">  datac &lt;- summarySE(data, measurevar, groupvars=<span class="built_in">c</span>(betweenvars, withinvars),</span><br><span class="line">                     na.rm=na.rm, conf.interval=conf.interval, .drop=.drop)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Drop all the unused columns (these will be calculated with normed data)</span></span><br><span class="line">  datac$sd &lt;- <span class="literal">NULL</span></span><br><span class="line">  datac$se &lt;- <span class="literal">NULL</span></span><br><span class="line">  datac$ci &lt;- <span class="literal">NULL</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Norm each subject&#x27;s data</span></span><br><span class="line">  ndata &lt;- normDataWithin(data, idvar, measurevar, betweenvars, na.rm, .drop=.drop)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># This is the name of the new column</span></span><br><span class="line">  measurevar_n &lt;- paste(measurevar, <span class="string">&quot;_norm&quot;</span>, sep=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Collapse the normed data - now we can treat between and within vars the same</span></span><br><span class="line">  ndatac &lt;- summarySE(ndata, measurevar_n, groupvars=<span class="built_in">c</span>(betweenvars, withinvars),</span><br><span class="line">                      na.rm=na.rm, conf.interval=conf.interval, .drop=.drop)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Apply correction from Morey (2008) to the standard error and confidence interval</span></span><br><span class="line">  <span class="comment">#  Get the product of the number of conditions of within-S variables</span></span><br><span class="line">  nWithinGroups    &lt;- <span class="built_in">prod</span>(vapply(ndatac[,withinvars, drop=<span class="literal">FALSE</span>], FUN=nlevels,</span><br><span class="line">                           FUN.VALUE=numeric(<span class="number">1</span>)))</span><br><span class="line">  correctionFactor &lt;- <span class="built_in">sqrt</span>( nWithinGroups / (nWithinGroups-<span class="number">1</span>) )</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Apply the correction factor</span></span><br><span class="line">  ndatac$sd &lt;- ndatac$sd * correctionFactor</span><br><span class="line">  ndatac$se &lt;- ndatac$se * correctionFactor</span><br><span class="line">  ndatac$ci &lt;- ndatac$ci * correctionFactor</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Combine the un-normed means with the normed results</span></span><br><span class="line">  merge(datac, ndatac)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tgc &lt;- summarySE(tg, measurevar=<span class="string">&quot;len&quot;</span>, groupvars=<span class="built_in">c</span>(<span class="string">&quot;supp&quot;</span>,<span class="string">&quot;dose&quot;</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;plyr&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following object is masked from &#x27;package:corrgram&#x27;:</span><br><span class="line">## </span><br><span class="line">##     baseball</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tgc</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   supp dose  N   len       sd        se       ci</span><br><span class="line">## 1   OJ  0.5 10 13.23 4.459709 1.4102837 3.190283</span><br><span class="line">## 2   OJ  1.0 10 22.70 3.910953 1.2367520 2.797727</span><br><span class="line">## 3   OJ  2.0 10 26.06 2.655058 0.8396031 1.899314</span><br><span class="line">## 4   VC  0.5 10  7.98 2.746634 0.8685620 1.964824</span><br><span class="line">## 5   VC  1.0 10 16.77 2.515309 0.7954104 1.799343</span><br><span class="line">## 6   VC  2.0 10 26.14 4.797731 1.5171757 3.432090</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Standard error of the mean</span></span><br><span class="line">ggplot(tgc, aes(x=dose, y=len, colour=supp)) + </span><br><span class="line">    geom_errorbar(aes(ymin=len-se, ymax=len+se), width=<span class="number">.1</span>) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The errorbars overlapped, so use position_dodge to move them horizontally</span></span><br><span class="line">pd &lt;- position_dodge(<span class="number">0.1</span>) <span class="comment"># move them .05 to the left and right</span></span><br><span class="line"></span><br><span class="line">ggplot(tgc, aes(x=dose, y=len, colour=supp)) + </span><br><span class="line">    geom_errorbar(aes(ymin=len-se, ymax=len+se), width=<span class="number">.1</span>, position=pd) +</span><br><span class="line">    geom_line(position=pd) +</span><br><span class="line">    geom_point(position=pd)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use 95% confidence interval instead of SEM</span></span><br><span class="line">ggplot(tgc, aes(x=dose, y=len, colour=supp)) + </span><br><span class="line">    geom_errorbar(aes(ymin=len-ci, ymax=len+ci), width=<span class="number">.1</span>, position=pd) +</span><br><span class="line">    geom_line(position=pd) +</span><br><span class="line">    geom_point(position=pd)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Black error bars - notice the mapping of &#x27;group=supp&#x27; -- without it, the error</span></span><br><span class="line"><span class="comment"># bars won&#x27;t be dodged!</span></span><br><span class="line">ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) + </span><br><span class="line">    geom_errorbar(aes(ymin=len-ci, ymax=len+ci), colour=<span class="string">&quot;black&quot;</span>, width=<span class="number">.1</span>, position=pd) +</span><br><span class="line">    geom_line(position=pd) +</span><br><span class="line">    geom_point(position=pd, size=<span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) + </span><br><span class="line">    geom_errorbar(aes(ymin=len-se, ymax=len+se), colour=<span class="string">&quot;black&quot;</span>, width=<span class="number">.1</span>, position=pd) +</span><br><span class="line">    geom_line(position=pd) +</span><br><span class="line">    geom_point(position=pd, size=<span class="number">3</span>, shape=<span class="number">21</span>, fill=<span class="string">&quot;white&quot;</span>) + <span class="comment"># 21 is filled circle</span></span><br><span class="line">    xlab(<span class="string">&quot;Dose (mg)&quot;</span>) +</span><br><span class="line">    ylab(<span class="string">&quot;Tooth length&quot;</span>) +</span><br><span class="line">    scale_colour_hue(name=<span class="string">&quot;Supplement type&quot;</span>,    <span class="comment"># Legend label, use darker colors</span></span><br><span class="line">                     breaks=<span class="built_in">c</span>(<span class="string">&quot;OJ&quot;</span>, <span class="string">&quot;VC&quot;</span>),</span><br><span class="line">                     labels=<span class="built_in">c</span>(<span class="string">&quot;Orange juice&quot;</span>, <span class="string">&quot;Ascorbic acid&quot;</span>),</span><br><span class="line">                     l=<span class="number">40</span>) +                    <span class="comment"># Use darker colors, lightness=40</span></span><br><span class="line">    ggtitle(<span class="string">&quot;The Effect of Vitamin C on\nTooth Growth in Guinea Pigs&quot;</span>) +</span><br><span class="line">    expand_limits(y=<span class="number">0</span>) +                        <span class="comment"># Expand y range</span></span><br><span class="line">    scale_y_continuous(breaks=<span class="number">0</span>:<span class="number">20</span>*<span class="number">4</span>) +         <span class="comment"># Set tick every 4</span></span><br><span class="line">    theme_bw() +</span><br><span class="line">    theme(legend.justification=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">          legend.position=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">0</span>))               <span class="comment"># Position legend in bottom right</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use dose as a factor rather than numeric</span></span><br><span class="line">tgc2 &lt;- tgc</span><br><span class="line">tgc2$dose &lt;- factor(tgc2$dose)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Error bars represent standard error of the mean</span></span><br><span class="line">ggplot(tgc2, aes(x=dose, y=len, fill=supp)) + </span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    geom_errorbar(aes(ymin=len-se, ymax=len+se),</span><br><span class="line">                  width=<span class="number">.2</span>,                    <span class="comment"># Width of the error bars</span></span><br><span class="line">                  position=position_dodge(<span class="number">.9</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use 95% confidence intervals instead of SEM</span></span><br><span class="line">ggplot(tgc2, aes(x=dose, y=len, fill=supp)) + </span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    geom_errorbar(aes(ymin=len-ci, ymax=len+ci),</span><br><span class="line">                  width=<span class="number">.2</span>,                    <span class="comment"># Width of the error bars</span></span><br><span class="line">                  position=position_dodge(<span class="number">.9</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(tgc2, aes(x=dose, y=len, fill=supp)) + </span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>,</span><br><span class="line">             colour=<span class="string">&quot;black&quot;</span>, <span class="comment"># Use black outlines,</span></span><br><span class="line">             size=<span class="number">.3</span>) +      <span class="comment"># Thinner lines</span></span><br><span class="line">    geom_errorbar(aes(ymin=len-se, ymax=len+se),</span><br><span class="line">                  size=<span class="number">.3</span>,    <span class="comment"># Thinner lines</span></span><br><span class="line">                  width=<span class="number">.2</span>,</span><br><span class="line">                  position=position_dodge(<span class="number">.9</span>)) +</span><br><span class="line">    xlab(<span class="string">&quot;Dose (mg)&quot;</span>) +</span><br><span class="line">    ylab(<span class="string">&quot;Tooth length&quot;</span>) +</span><br><span class="line">    scale_fill_hue(name=<span class="string">&quot;Supplement type&quot;</span>, <span class="comment"># Legend label, use darker colors</span></span><br><span class="line">                   breaks=<span class="built_in">c</span>(<span class="string">&quot;OJ&quot;</span>, <span class="string">&quot;VC&quot;</span>),</span><br><span class="line">                   labels=<span class="built_in">c</span>(<span class="string">&quot;Orange juice&quot;</span>, <span class="string">&quot;Ascorbic acid&quot;</span>)) +</span><br><span class="line">    ggtitle(<span class="string">&quot;The Effect of Vitamin C on\nTooth Growth in Guinea Pigs&quot;</span>) +</span><br><span class="line">    scale_y_continuous(breaks=<span class="number">0</span>:<span class="number">20</span>*<span class="number">4</span>) +</span><br><span class="line">    theme_bw()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dfw &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> subject pretest posttest</span></span><br><span class="line"><span class="string">       1    59.4     64.5</span></span><br><span class="line"><span class="string">       2    46.4     52.4</span></span><br><span class="line"><span class="string">       3    46.0     49.7</span></span><br><span class="line"><span class="string">       4    49.0     48.7</span></span><br><span class="line"><span class="string">       5    32.5     37.4</span></span><br><span class="line"><span class="string">       6    45.2     49.5</span></span><br><span class="line"><span class="string">       7    60.3     59.9</span></span><br><span class="line"><span class="string">       8    54.3     54.1</span></span><br><span class="line"><span class="string">       9    45.4     49.6</span></span><br><span class="line"><span class="string">      10    38.9     48.5</span></span><br><span class="line"><span class="string"> &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Treat subject ID as a factor</span></span><br><span class="line">dfw$subject &lt;- factor(dfw$subject)</span><br><span class="line"></span><br><span class="line">library(reshape2)</span><br><span class="line">dfw_long &lt;- melt(dfw,</span><br><span class="line">                 id.vars = <span class="string">&quot;subject&quot;</span>,</span><br><span class="line">                 measure.vars = <span class="built_in">c</span>(<span class="string">&quot;pretest&quot;</span>,<span class="string">&quot;posttest&quot;</span>),</span><br><span class="line">                 variable.name = <span class="string">&quot;condition&quot;</span>)</span><br><span class="line"></span><br><span class="line">dfw_long</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##    subject condition value</span><br><span class="line">## 1        1   pretest  59.4</span><br><span class="line">## 2        2   pretest  46.4</span><br><span class="line">## 3        3   pretest  46.0</span><br><span class="line">## 4        4   pretest  49.0</span><br><span class="line">## 5        5   pretest  32.5</span><br><span class="line">## 6        6   pretest  45.2</span><br><span class="line">## 7        7   pretest  60.3</span><br><span class="line">## 8        8   pretest  54.3</span><br><span class="line">## 9        9   pretest  45.4</span><br><span class="line">## 10      10   pretest  38.9</span><br><span class="line">## 11       1  posttest  64.5</span><br><span class="line">## 12       2  posttest  52.4</span><br><span class="line">## 13       3  posttest  49.7</span><br><span class="line">## 14       4  posttest  48.7</span><br><span class="line">## 15       5  posttest  37.4</span><br><span class="line">## 16       6  posttest  49.5</span><br><span class="line">## 17       7  posttest  59.9</span><br><span class="line">## 18       8  posttest  54.1</span><br><span class="line">## 19       9  posttest  49.6</span><br><span class="line">## 20      10  posttest  48.5</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dfwc &lt;- summarySEwithin(dfw_long, measurevar=<span class="string">&quot;value&quot;</span>, withinvars=<span class="string">&quot;condition&quot;</span>,</span><br><span class="line">                        idvar=<span class="string">&quot;subject&quot;</span>, na.rm=<span class="literal">FALSE</span>, conf.interval=<span class="number">.95</span>)</span><br><span class="line"></span><br><span class="line">dfwc</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   condition  N value value_norm       sd        se       ci</span><br><span class="line">## 1  posttest 10 51.43      51.43 2.262361 0.7154214 1.618396</span><br><span class="line">## 2   pretest 10 47.74      47.74 2.262361 0.7154214 1.618396</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;   condition  N value value_norm       sd        se       ci</span></span><br><span class="line"><span class="comment">#&gt; 1  posttest 10 51.43      51.43 2.262361 0.7154214 1.618396</span></span><br><span class="line"><span class="comment">#&gt; 2   pretest 10 47.74      47.74 2.262361 0.7154214 1.618396</span></span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># Make the graph with the 95% confidence interval</span></span><br><span class="line">ggplot(dfwc, aes(x=condition, y=value, group=<span class="number">1</span>)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_errorbar(width=<span class="number">.1</span>, aes(ymin=value-ci, ymax=value+ci)) +</span><br><span class="line">    geom_point(shape=<span class="number">21</span>, size=<span class="number">3</span>, fill=<span class="string">&quot;white&quot;</span>) +</span><br><span class="line">    ylim(<span class="number">40</span>,<span class="number">60</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use a consistent y range</span></span><br><span class="line">ymax &lt;- <span class="built_in">max</span>(dfw_long$value)</span><br><span class="line">ymin &lt;- <span class="built_in">min</span>(dfw_long$value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the individuals</span></span><br><span class="line">ggplot(dfw_long, aes(x=condition, y=value, colour=subject, group=subject)) +</span><br><span class="line">    geom_line() + geom_point(shape=<span class="number">21</span>, fill=<span class="string">&quot;white&quot;</span>) + </span><br><span class="line">    ylim(ymin,ymax)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create the normed version of the data</span></span><br><span class="line">dfwNorm.long &lt;- normDataWithin(data=dfw_long, idvar=<span class="string">&quot;subject&quot;</span>, measurevar=<span class="string">&quot;value&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the normed individuals</span></span><br><span class="line">ggplot(dfwNorm.long, aes(x=condition, y=value_norm, colour=subject, group=subject)) +</span><br><span class="line">    geom_line() + geom_point(shape=<span class="number">21</span>, fill=<span class="string">&quot;white&quot;</span>) + </span><br><span class="line">    ylim(ymin,ymax)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Instead of summarySEwithin, use summarySE, which treats condition</span></span><br><span class="line"><span class="comment"># as though it were a between-subjects variable</span></span><br><span class="line">dfwc_between &lt;- summarySE(data=dfw_long, measurevar=<span class="string">&quot;value&quot;</span>,</span><br><span class="line">groupvars=<span class="string">&quot;condition&quot;</span>, na.rm=<span class="literal">FALSE</span>, conf.interval=<span class="number">.95</span>)</span><br><span class="line">dfwc_between</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   condition  N value       sd       se       ci</span><br><span class="line">## 1   pretest 10 47.74 8.598992 2.719240 6.151348</span><br><span class="line">## 2  posttest 10 51.43 7.253972 2.293907 5.189179</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;   condition  N value       sd       se       ci</span></span><br><span class="line"><span class="comment">#&gt; 1   pretest 10 47.74 8.598992 2.719240 6.151348</span></span><br><span class="line"><span class="comment">#&gt; 2  posttest 10 51.43 7.253972 2.293907 5.189179</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show the between-S CI&#x27;s in red, and the within-S CI&#x27;s in black</span></span><br><span class="line">ggplot(dfwc_between, aes(x=condition, y=value, group=<span class="number">1</span>)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    geom_errorbar(width=<span class="number">.1</span>, aes(ymin=value-ci, ymax=value+ci), colour=<span class="string">&quot;red&quot;</span>) +</span><br><span class="line">    geom_errorbar(width=<span class="number">.1</span>, aes(ymin=value-ci, ymax=value+ci), data=dfwc) +</span><br><span class="line">    geom_point(shape=<span class="number">21</span>, size=<span class="number">3</span>, fill=<span class="string">&quot;white&quot;</span>) +</span><br><span class="line">    ylim(ymin,ymax)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> Subject RoundMono SquareMono RoundColor SquareColor</span></span><br><span class="line"><span class="string">       1        41         40         41          37</span></span><br><span class="line"><span class="string">       2        57         56         56          53</span></span><br><span class="line"><span class="string">       3        52         53         53          50</span></span><br><span class="line"><span class="string">       4        49         47         47          47</span></span><br><span class="line"><span class="string">       5        47         48         48          47</span></span><br><span class="line"><span class="string">       6        37         34         35          36</span></span><br><span class="line"><span class="string">       7        47         50         47          46</span></span><br><span class="line"><span class="string">       8        41         40         38          40</span></span><br><span class="line"><span class="string">       9        48         47         49          45</span></span><br><span class="line"><span class="string">      10        37         35         36          35</span></span><br><span class="line"><span class="string">      11        32         31         31          33</span></span><br><span class="line"><span class="string">      12        47         42         42          42</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert it to long format</span></span><br><span class="line">library(reshape2)</span><br><span class="line">data_long &lt;- melt(data=data, id.var=<span class="string">&quot;Subject&quot;</span>,</span><br><span class="line">                  measure.vars=<span class="built_in">c</span>(<span class="string">&quot;RoundMono&quot;</span>, <span class="string">&quot;SquareMono&quot;</span>, <span class="string">&quot;RoundColor&quot;</span>, <span class="string">&quot;SquareColor&quot;</span>),</span><br><span class="line">                  variable.name=<span class="string">&quot;Condition&quot;</span>)</span><br><span class="line"><span class="built_in">names</span>(data_long)[<span class="built_in">names</span>(data_long)==<span class="string">&quot;value&quot;</span>] &lt;- <span class="string">&quot;Time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Split Condition column into Shape and ColorScheme</span></span><br><span class="line">data_long$Shape &lt;- <span class="literal">NA</span></span><br><span class="line">data_long$Shape[grepl(<span class="string">&quot;^Round&quot;</span>,  data_long$Condition)] &lt;- <span class="string">&quot;Round&quot;</span></span><br><span class="line">data_long$Shape[grepl(<span class="string">&quot;^Square&quot;</span>, data_long$Condition)] &lt;- <span class="string">&quot;Square&quot;</span></span><br><span class="line">data_long$Shape &lt;- factor(data_long$Shape)</span><br><span class="line"></span><br><span class="line">data_long$ColorScheme &lt;- <span class="literal">NA</span></span><br><span class="line">data_long$ColorScheme[grepl(<span class="string">&quot;Mono$&quot;</span>,  data_long$Condition)] &lt;- <span class="string">&quot;Monochromatic&quot;</span></span><br><span class="line">data_long$ColorScheme[grepl(<span class="string">&quot;Color$&quot;</span>, data_long$Condition)] &lt;- <span class="string">&quot;Colored&quot;</span></span><br><span class="line">data_long$ColorScheme &lt;- factor(data_long$ColorScheme, levels=<span class="built_in">c</span>(<span class="string">&quot;Monochromatic&quot;</span>,<span class="string">&quot;Colored&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove the Condition column now</span></span><br><span class="line">data_long$Condition &lt;- <span class="literal">NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Look at first few rows </span></span><br><span class="line">head(data_long)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   Subject Time Shape   ColorScheme</span><br><span class="line">## 1       1   41 Round Monochromatic</span><br><span class="line">## 2       2   57 Round Monochromatic</span><br><span class="line">## 3       3   52 Round Monochromatic</span><br><span class="line">## 4       4   49 Round Monochromatic</span><br><span class="line">## 5       5   47 Round Monochromatic</span><br><span class="line">## 6       6   37 Round Monochromatic</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">datac &lt;- summarySEwithin(data_long, measurevar=<span class="string">&quot;Time&quot;</span>,</span><br><span class="line">withinvars=<span class="built_in">c</span>(<span class="string">&quot;Shape&quot;</span>,<span class="string">&quot;ColorScheme&quot;</span>), idvar=<span class="string">&quot;Subject&quot;</span>)</span><br><span class="line">datac</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##    Shape   ColorScheme  N     Time Time_norm       sd        se        ci</span><br><span class="line">## 1  Round       Colored 12 43.58333  43.58333 1.212311 0.3499639 0.7702654</span><br><span class="line">## 2  Round Monochromatic 12 44.58333  44.58333 1.331438 0.3843531 0.8459554</span><br><span class="line">## 3 Square       Colored 12 42.58333  42.58333 1.461630 0.4219364 0.9286757</span><br><span class="line">## 4 Square Monochromatic 12 43.58333  43.58333 1.261312 0.3641095 0.8013997</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;    Shape   ColorScheme  N     Time Time_norm       sd        se        ci</span></span><br><span class="line"><span class="comment">#&gt; 1  Round       Colored 12 43.58333  43.58333 1.212311 0.3499639 0.7702654</span></span><br><span class="line"><span class="comment">#&gt; 2  Round Monochromatic 12 44.58333  44.58333 1.331438 0.3843531 0.8459554</span></span><br><span class="line"><span class="comment">#&gt; 3 Square       Colored 12 42.58333  42.58333 1.461630 0.4219364 0.9286757</span></span><br><span class="line"><span class="comment">#&gt; 4 Square Monochromatic 12 43.58333  43.58333 1.261312 0.3641095 0.8013997</span></span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line">ggplot(datac, aes(x=Shape, y=Time, fill=ColorScheme)) +</span><br><span class="line">    geom_bar(position=position_dodge(<span class="number">.9</span>), colour=<span class="string">&quot;black&quot;</span>, stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    geom_errorbar(position=position_dodge(<span class="number">.9</span>), width=<span class="number">.25</span>, aes(ymin=Time-ci, ymax=Time+ci)) +</span><br><span class="line">    coord_cartesian(ylim=<span class="built_in">c</span>(<span class="number">40</span>,<span class="number">46</span>)) +</span><br><span class="line">    scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">&quot;#CCCCCC&quot;</span>,<span class="string">&quot;#FFFFFF&quot;</span>)) +</span><br><span class="line">    scale_y_continuous(breaks=seq(<span class="number">1</span>:<span class="number">100</span>)) +</span><br><span class="line">    theme_bw() +</span><br><span class="line">    geom_hline(yintercept=<span class="number">38</span>) </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-17-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">id trial gender dv</span></span><br><span class="line"><span class="string"> A     0   male  2</span></span><br><span class="line"><span class="string"> A     1   male  4</span></span><br><span class="line"><span class="string"> B     0   male  6</span></span><br><span class="line"><span class="string"> B     1   male  8</span></span><br><span class="line"><span class="string"> C     0 female 22</span></span><br><span class="line"><span class="string"> C     1 female 24</span></span><br><span class="line"><span class="string"> D     0 female 26</span></span><br><span class="line"><span class="string"> D     1 female 28</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># normed and un-normed means are different</span></span><br><span class="line">summarySEwithin(dat, measurevar=<span class="string">&quot;dv&quot;</span>, withinvars=<span class="string">&quot;trial&quot;</span>, betweenvars=<span class="string">&quot;gender&quot;</span>,</span><br><span class="line">                idvar=<span class="string">&quot;id&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Automatically converting the following non-factors to factors: gender, trial</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   gender trial N dv dv_norm sd se ci</span><br><span class="line">## 1 female     0 2 24      14  0  0  0</span><br><span class="line">## 2 female     1 2 26      16  0  0  0</span><br><span class="line">## 3   male     0 2  4      14  0  0  0</span><br><span class="line">## 4   male     1 2  6      16  0  0  0</span><br></pre></td></tr></table></figure>

<h2 id="绘制分布图"><a href="#绘制分布图" class="headerlink" title="绘制分布图"></a>绘制分布图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">1234</span>)</span><br><span class="line">dat &lt;- data.frame(cond = factor(<span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>), each=<span class="number">200</span>)), </span><br><span class="line">                   rating = <span class="built_in">c</span>(rnorm(<span class="number">200</span>),rnorm(<span class="number">200</span>, mean=<span class="number">.8</span>)))</span><br><span class="line"><span class="comment"># View first few rows</span></span><br><span class="line">head(dat)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   cond     rating</span><br><span class="line">## 1    A -1.2070657</span><br><span class="line">## 2    A  0.2774292</span><br><span class="line">## 3    A  1.0844412</span><br><span class="line">## 4    A -2.3456977</span><br><span class="line">## 5    A  0.4291247</span><br><span class="line">## 6    A  0.5060559</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;   cond     rating</span></span><br><span class="line"><span class="comment">#&gt; 1    A -1.2070657</span></span><br><span class="line"><span class="comment">#&gt; 2    A  0.2774292</span></span><br><span class="line"><span class="comment">#&gt; 3    A  1.0844412</span></span><br><span class="line"><span class="comment">#&gt; 4    A -2.3456977</span></span><br><span class="line"><span class="comment">#&gt; 5    A  0.4291247</span></span><br><span class="line"><span class="comment">#&gt; 6    A  0.5060559</span></span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment">## Basic histogram from the vector &quot;rating&quot;. Each bin is .5 wide.</span></span><br><span class="line"><span class="comment">## These both result in the same output:</span></span><br><span class="line">ggplot(dat, aes(x=rating)) + geom_histogram(binwidth=<span class="number">.5</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># qplot(dat$rating, binwidth=.5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Draw with black outline, white fill</span></span><br><span class="line">ggplot(dat, aes(x=rating)) +</span><br><span class="line">    geom_histogram(binwidth=<span class="number">.5</span>, colour=<span class="string">&quot;black&quot;</span>, fill=<span class="string">&quot;white&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Density curve</span></span><br><span class="line">ggplot(dat, aes(x=rating)) + geom_density()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Histogram overlaid with kernel density curve</span></span><br><span class="line">ggplot(dat, aes(x=rating)) + </span><br><span class="line">    geom_histogram(aes(y=..density..), <span class="comment"># Histogram with density </span></span><br><span class="line">                   <span class="comment"># instead of count on y-axis</span></span><br><span class="line">                   binwidth=<span class="number">.5</span>,</span><br><span class="line">                   colour=<span class="string">&quot;black&quot;</span>, fill=<span class="string">&quot;white&quot;</span>) +</span><br><span class="line">    geom_density(alpha=<span class="number">.2</span>, fill=<span class="string">&quot;#FF6666&quot;</span>)  <span class="comment"># Overlay with transparent density plot</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(dat, aes(x=rating)) +</span><br><span class="line">    geom_histogram(binwidth=<span class="number">.5</span>, colour=<span class="string">&quot;black&quot;</span>, fill=<span class="string">&quot;white&quot;</span>) +</span><br><span class="line">    geom_vline(aes(xintercept=mean(rating, na.rm=<span class="built_in">T</span>)),   <span class="comment"># Ignore NA values for mean</span></span><br><span class="line">               color=<span class="string">&quot;red&quot;</span>, linetype=<span class="string">&quot;dashed&quot;</span>, size=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Overlaid histograms</span></span><br><span class="line">ggplot(dat, aes(x=rating, fill=cond)) +</span><br><span class="line">    geom_histogram(binwidth=<span class="number">.5</span>, alpha=<span class="number">.5</span>, position=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Interleaved histograms</span></span><br><span class="line">ggplot(dat, aes(x=rating, fill=cond)) +</span><br><span class="line">    geom_histogram(binwidth=<span class="number">.5</span>, position=<span class="string">&quot;dodge&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Density plots</span></span><br><span class="line">ggplot(dat, aes(x=rating, colour=cond)) + geom_density()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Density plots with semi-transparent fill</span></span><br><span class="line">ggplot(dat, aes(x=rating, fill=cond)) + geom_density(alpha=<span class="number">.3</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Find the mean of each group</span></span><br><span class="line">library(plyr)</span><br><span class="line">cdat &lt;- ddply(dat, <span class="string">&quot;cond&quot;</span>, summarise, rating.mean=mean(rating))</span><br><span class="line">cdat</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   cond rating.mean</span><br><span class="line">## 1    A -0.05775928</span><br><span class="line">## 2    B  0.87324927</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;   cond rating.mean</span></span><br><span class="line"><span class="comment">#&gt; 1    A -0.05775928</span></span><br><span class="line"><span class="comment">#&gt; 2    B  0.87324927</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Overlaid histograms with means</span></span><br><span class="line">ggplot(dat, aes(x=rating, fill=cond)) +</span><br><span class="line">    geom_histogram(binwidth=<span class="number">.5</span>, alpha=<span class="number">.5</span>, position=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    geom_vline(data=cdat, aes(xintercept=rating.mean,  colour=cond),</span><br><span class="line">               linetype=<span class="string">&quot;dashed&quot;</span>, size=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Density plots with means</span></span><br><span class="line">ggplot(dat, aes(x=rating, colour=cond)) +</span><br><span class="line">    geom_density() +</span><br><span class="line">    geom_vline(data=cdat, aes(xintercept=rating.mean,  colour=cond),</span><br><span class="line">               linetype=<span class="string">&quot;dashed&quot;</span>, size=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(dat, aes(x=rating)) + geom_histogram(binwidth=<span class="number">.5</span>, </span><br><span class="line">    colour=<span class="string">&quot;black&quot;</span>, fill=<span class="string">&quot;white&quot;</span>) + </span><br><span class="line">    facet_grid(cond ~ .)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># With mean lines, using cdat from above</span></span><br><span class="line">ggplot(dat, aes(x=rating)) + geom_histogram(binwidth=<span class="number">.5</span>, </span><br><span class="line">    colour=<span class="string">&quot;black&quot;</span>, fill=<span class="string">&quot;white&quot;</span>) + </span><br><span class="line">    facet_grid(cond ~ .) +</span><br><span class="line">    geom_vline(data=cdat, aes(xintercept=rating.mean),</span><br><span class="line">               linetype=<span class="string">&quot;dashed&quot;</span>, size=<span class="number">1</span>, colour=<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A basic box plot</span></span><br><span class="line">ggplot(dat, aes(x=cond, y=rating)) + geom_boxplot()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-14.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A basic box with the conditions colored</span></span><br><span class="line">ggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-15.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The above adds a redundant legend. With the legend removed:</span></span><br><span class="line">ggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot() +</span><br><span class="line">    guides(fill=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-16.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># With flipped axes</span></span><br><span class="line">ggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot() + </span><br><span class="line">    guides(fill=<span class="literal">FALSE</span>) + coord_flip()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-17.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add a diamond at the mean, and make it larger</span></span><br><span class="line">ggplot(dat, aes(x=cond, y=rating)) + geom_boxplot() +</span><br><span class="line">    stat_summary(fun.y=mean, geom=<span class="string">&quot;point&quot;</span>, shape=<span class="number">5</span>, size=<span class="number">4</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Warning: `fun.y` is deprecated. Use `fun` instead.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Warning: Computation failed in `stat_summary()`:</span><br><span class="line">## Can&#x27;t convert a double vector to function</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-18-18.png"><!-- --></p>
<h2 id="绘制散点图"><a href="#绘制散点图" class="headerlink" title="绘制散点图"></a>绘制散点图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">955</span>)</span><br><span class="line"><span class="comment"># Make some noisily increasing data</span></span><br><span class="line">dat &lt;- data.frame(cond = <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>), each=<span class="number">10</span>),</span><br><span class="line">                  xvar = <span class="number">1</span>:<span class="number">20</span> + rnorm(<span class="number">20</span>,sd=<span class="number">3</span>),</span><br><span class="line">                  yvar = <span class="number">1</span>:<span class="number">20</span> + rnorm(<span class="number">20</span>,sd=<span class="number">3</span>))</span><br><span class="line">head(dat)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   cond      xvar         yvar</span><br><span class="line">## 1    A -4.252354  3.473157275</span><br><span class="line">## 2    A  1.702318  0.005939612</span><br><span class="line">## 3    A  4.323054 -0.094252427</span><br><span class="line">## 4    A  1.780628  2.072808278</span><br><span class="line">## 5    A 11.537348  1.215440358</span><br><span class="line">## 6    A  6.672130  3.608111411</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt;   cond      xvar         yvar</span></span><br><span class="line"><span class="comment">#&gt; 1    A -4.252354  3.473157275</span></span><br><span class="line"><span class="comment">#&gt; 2    A  1.702318  0.005939612</span></span><br><span class="line"><span class="comment">#&gt; 3    A  4.323054 -0.094252427</span></span><br><span class="line"><span class="comment">#&gt; 4    A  1.780628  2.072808278</span></span><br><span class="line"><span class="comment">#&gt; 5    A 11.537348  1.215440358</span></span><br><span class="line"><span class="comment">#&gt; 6    A  6.672130  3.608111411</span></span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar)) +</span><br><span class="line">    geom_point(shape=<span class="number">1</span>)      <span class="comment"># Use hollow circles</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(dat, aes(x=xvar, y=yvar)) +</span><br><span class="line">    geom_point(shape=<span class="number">1</span>) +    <span class="comment"># Use hollow circles</span></span><br><span class="line">    geom_smooth(method=lm)   <span class="comment"># Add linear regression line </span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `geom_smooth()` using formula &#x27;y ~ x&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">                             <span class="comment">#  (by default includes 95% confidence region)</span></span><br><span class="line"></span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar)) +</span><br><span class="line">    geom_point(shape=<span class="number">1</span>) +    <span class="comment"># Use hollow circles</span></span><br><span class="line">    geom_smooth(method=lm,   <span class="comment"># Add linear regression line</span></span><br><span class="line">                se=<span class="literal">FALSE</span>)    <span class="comment"># Don&#x27;t add shaded confidence region</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `geom_smooth()` using formula &#x27;y ~ x&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(dat, aes(x=xvar, y=yvar)) +</span><br><span class="line">    geom_point(shape=<span class="number">1</span>) +    <span class="comment"># Use hollow circles</span></span><br><span class="line">    geom_smooth()            <span class="comment"># Add a loess smoothed fit curve with confidence region</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `geom_smooth()` using method = &#x27;loess&#x27; and formula &#x27;y ~ x&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set color by cond</span></span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar, color=cond)) + geom_point(shape=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Same, but with different colors and add regression lines</span></span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar, color=cond)) +</span><br><span class="line">    geom_point(shape=<span class="number">1</span>) +</span><br><span class="line">    scale_colour_hue(l=<span class="number">50</span>) + <span class="comment"># Use a slightly darker palette than normal</span></span><br><span class="line">    geom_smooth(method=lm,   <span class="comment"># Add linear regression lines</span></span><br><span class="line">                se=<span class="literal">FALSE</span>)    <span class="comment"># Don&#x27;t add shaded confidence region</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `geom_smooth()` using formula &#x27;y ~ x&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extend the regression lines beyond the domain of the data</span></span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar, color=cond)) + geom_point(shape=<span class="number">1</span>) +</span><br><span class="line">    scale_colour_hue(l=<span class="number">50</span>) + <span class="comment"># Use a slightly darker palette than normal</span></span><br><span class="line">    geom_smooth(method=lm,   <span class="comment"># Add linear regression lines</span></span><br><span class="line">                se=<span class="literal">FALSE</span>,    <span class="comment"># Don&#x27;t add shaded confidence region</span></span><br><span class="line">                fullrange=<span class="literal">TRUE</span>) <span class="comment"># Extend regression lines</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `geom_smooth()` using formula &#x27;y ~ x&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set shape by cond</span></span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar, shape=cond)) + geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Same, but with different shapes</span></span><br><span class="line">ggplot(dat, aes(x=xvar, y=yvar, shape=cond)) + geom_point() +</span><br><span class="line">    scale_shape_manual(values=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>))  <span class="comment"># Use a hollow circle and triangle</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Round xvar and yvar to the nearest 5</span></span><br><span class="line">dat$xrnd &lt;- <span class="built_in">round</span>(dat$xvar/<span class="number">5</span>)*<span class="number">5</span></span><br><span class="line">dat$yrnd &lt;- <span class="built_in">round</span>(dat$yvar/<span class="number">5</span>)*<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make each dot partially transparent, with 1/4 opacity</span></span><br><span class="line"><span class="comment"># For heavy overplotting, try using smaller values</span></span><br><span class="line">ggplot(dat, aes(x=xrnd, y=yrnd)) +</span><br><span class="line">    geom_point(shape=<span class="number">19</span>,      <span class="comment"># Use solid circles</span></span><br><span class="line">               alpha=<span class="number">1</span>/<span class="number">4</span>)     <span class="comment"># 1/4 opacity</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Jitter the points</span></span><br><span class="line"><span class="comment"># Jitter range is 1 on the x-axis, .5 on the y-axis</span></span><br><span class="line">ggplot(dat, aes(x=xrnd, y=yrnd)) +</span><br><span class="line">    geom_point(shape=<span class="number">1</span>,      <span class="comment"># Use hollow circles</span></span><br><span class="line">               position=position_jitter(width=<span class="number">1</span>,height=<span class="number">.5</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-19-11.png"><!-- --></p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line">bp &lt;- ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()</span><br><span class="line">bp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-20-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + ggtitle(<span class="string">&quot;Plant growth&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-20-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Equivalent to</span></span><br><span class="line"><span class="comment"># bp + labs(title=&quot;Plant growth&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the title is long, it can be split into multiple lines with \n</span></span><br><span class="line">bp + ggtitle(<span class="string">&quot;Plant growth with\ndifferent treatments&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-20-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reduce line spacing and use bold text</span></span><br><span class="line">bp + ggtitle(<span class="string">&quot;Plant growth with\ndifferent treatments&quot;</span>) + </span><br><span class="line">     theme(plot.title = element_text(lineheight=<span class="number">.8</span>, face=<span class="string">&quot;bold&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-20-4.png"><!-- --></p>
<h2 id="坐标轴"><a href="#坐标轴" class="headerlink" title="坐标轴"></a>坐标轴</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line">bp &lt;- ggplot(PlantGrowth, aes(x=group, y=weight)) +</span><br><span class="line">    geom_boxplot()</span><br><span class="line">bp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + coord_flip()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Manually set the order of a discrete-valued axis</span></span><br><span class="line">bp + scale_x_discrete(limits=<span class="built_in">c</span>(<span class="string">&quot;trt1&quot;</span>,<span class="string">&quot;trt2&quot;</span>,<span class="string">&quot;ctrl&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reverse the order of a discrete-valued axis</span></span><br><span class="line"><span class="comment"># Get the levels of the factor</span></span><br><span class="line">flevels &lt;- levels(PlantGrowth$group)</span><br><span class="line">flevels</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## [1] &quot;ctrl&quot; &quot;trt1&quot; &quot;trt2&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt; [1] &quot;ctrl&quot; &quot;trt1&quot; &quot;trt2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reverse the order</span></span><br><span class="line">flevels &lt;- rev(flevels)</span><br><span class="line">flevels</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## [1] &quot;trt2&quot; &quot;trt1&quot; &quot;ctrl&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt; [1] &quot;trt2&quot; &quot;trt1&quot; &quot;ctrl&quot;</span></span><br><span class="line"></span><br><span class="line">bp + scale_x_discrete(limits=flevels)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Or it can be done in one line:</span></span><br><span class="line">bp + scale_x_discrete(limits = rev(levels(PlantGrowth$group)))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + scale_x_discrete(breaks=<span class="built_in">c</span>(<span class="string">&quot;ctrl&quot;</span>, <span class="string">&quot;trt1&quot;</span>, <span class="string">&quot;trt2&quot;</span>),</span><br><span class="line">                      labels=<span class="built_in">c</span>(<span class="string">&quot;Control&quot;</span>, <span class="string">&quot;Treat 1&quot;</span>, <span class="string">&quot;Treat 2&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide x tick marks, labels, and grid lines</span></span><br><span class="line">bp + scale_x_discrete(breaks=<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide all tick marks and labels (on X axis), but keep the gridlines</span></span><br><span class="line">bp + theme(axis.ticks = element_blank(), axis.text.x = element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make sure to include 0 in the y axis</span></span><br><span class="line">bp + expand_limits(y=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make sure to include 0 and 8 in the y axis</span></span><br><span class="line">bp + expand_limits(y=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set the range of a continuous-valued axis</span></span><br><span class="line"><span class="comment"># These are equivalent</span></span><br><span class="line">bp + ylim(<span class="number">0</span>, <span class="number">8</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bp + scale_y_continuous(limits=c(0, 8))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These two do the same thing; all data points outside the graphing range are</span></span><br><span class="line"><span class="comment"># dropped, resulting in a misleading box plot</span></span><br><span class="line">bp + ylim(<span class="number">5</span>, <span class="number">7.5</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Warning: Removed 13 rows containing non-finite values (stat_boxplot).</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&gt; Warning: Removed 13 rows containing non-finite values (stat_boxplot).</span></span><br><span class="line"><span class="comment"># bp + scale_y_continuous(limits=c(5, 7.5))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Using coord_cartesian &quot;zooms&quot; into the area</span></span><br><span class="line">bp + coord_cartesian(ylim=<span class="built_in">c</span>(<span class="number">5</span>, <span class="number">7.5</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Specify tick marks directly</span></span><br><span class="line">bp + coord_cartesian(ylim=<span class="built_in">c</span>(<span class="number">5</span>, <span class="number">7.5</span>)) + </span><br><span class="line">    scale_y_continuous(breaks=seq(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.25</span>))  <span class="comment"># Ticks from 0-10, every .25</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-14.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reverse order of a continuous-valued axis</span></span><br><span class="line">bp + scale_y_reverse()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-15.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Setting the tick marks on an axis</span></span><br><span class="line"><span class="comment"># This will show tick marks on every 0.25 from 1 to 10</span></span><br><span class="line"><span class="comment"># The scale will show only the ones that are within range (3.50-6.25 in this case)</span></span><br><span class="line">bp + scale_y_continuous(breaks=seq(<span class="number">1</span>,<span class="number">10</span>,<span class="number">1</span>/<span class="number">4</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-16.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The breaks can be spaced unevenly</span></span><br><span class="line">bp + scale_y_continuous(breaks=<span class="built_in">c</span>(<span class="number">4</span>, <span class="number">4.25</span>, <span class="number">4.5</span>, <span class="number">5</span>, <span class="number">6</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-17.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Suppress ticks and gridlines</span></span><br><span class="line">bp + scale_y_continuous(breaks=<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-18.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide tick marks and labels (on Y axis), but keep the gridlines</span></span><br><span class="line">bp + theme(axis.ticks = element_blank(), axis.text.y = element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-19.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create some noisy exponentially-distributed data</span></span><br><span class="line">set.seed(<span class="number">201</span>)</span><br><span class="line">n &lt;- 100</span><br><span class="line">dat &lt;- data.frame(</span><br><span class="line">    xval = (<span class="number">1</span>:n+rnorm(n,sd=<span class="number">5</span>))/<span class="number">20</span>,</span><br><span class="line">    yval = <span class="number">2</span>*<span class="number">2</span>^((<span class="number">1</span>:n+rnorm(n,sd=<span class="number">5</span>))/<span class="number">20</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A scatterplot with regular (linear) axis scaling</span></span><br><span class="line">sp &lt;- ggplot(dat, aes(xval, yval)) + geom_point()</span><br><span class="line">sp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-20.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># log2 scaling of the y axis (with visually-equal spacing)</span></span><br><span class="line">library(scales)     <span class="comment"># Need the scales package</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;scales&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following object is masked from &#x27;package:plotrix&#x27;:</span><br><span class="line">## </span><br><span class="line">##     rescale</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sp + scale_y_continuous(trans=log2_trans())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-21.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># log2 coordinate transformation (with visually-diminishing spacing)</span></span><br><span class="line">sp + coord_trans(y=<span class="string">&quot;log2&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-22.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sp + scale_y_continuous(trans = log2_trans(),</span><br><span class="line">                        breaks = trans_breaks(<span class="string">&quot;log2&quot;</span>, <span class="keyword">function</span>(x) <span class="number">2</span>^x),</span><br><span class="line">                        labels = trans_format(<span class="string">&quot;log2&quot;</span>, math_format(<span class="number">2</span>^.x)))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-23.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">set.seed(<span class="number">205</span>)</span><br><span class="line">n &lt;- 100</span><br><span class="line">dat10 &lt;- data.frame(</span><br><span class="line">    xval = (<span class="number">1</span>:n+rnorm(n,sd=<span class="number">5</span>))/<span class="number">20</span>,</span><br><span class="line">    yval = <span class="number">10</span>*<span class="number">10</span>^((<span class="number">1</span>:n+rnorm(n,sd=<span class="number">5</span>))/<span class="number">20</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">sp10 &lt;- ggplot(dat10, aes(xval, yval)) + geom_point()</span><br><span class="line"></span><br><span class="line"><span class="comment"># log10</span></span><br><span class="line">sp10 + scale_y_log10()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-24.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># log10 with exponents on tick labels</span></span><br><span class="line">sp10 + scale_y_log10(breaks = trans_breaks(<span class="string">&quot;log10&quot;</span>, <span class="keyword">function</span>(x) <span class="number">10</span>^x),</span><br><span class="line">                     labels = trans_format(<span class="string">&quot;log10&quot;</span>, math_format(<span class="number">10</span>^.x)))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-25.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Data where x ranges from 0-10, y ranges from 0-30</span></span><br><span class="line">set.seed(<span class="number">202</span>)</span><br><span class="line">dat &lt;- data.frame(</span><br><span class="line">    xval = runif(<span class="number">40</span>,<span class="number">0</span>,<span class="number">10</span>),</span><br><span class="line">    yval = runif(<span class="number">40</span>,<span class="number">0</span>,<span class="number">30</span>)</span><br><span class="line">)</span><br><span class="line">sp &lt;- ggplot(dat, aes(xval, yval)) + geom_point()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Force equal scaling</span></span><br><span class="line">sp + coord_fixed()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-26.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Equal scaling, with each 1 on the x axis the same length as y on x axis</span></span><br><span class="line">sp + coord_fixed(ratio=<span class="number">1</span>/<span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-27.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + theme(axis.title.x = element_blank()) +   <span class="comment"># Remove x-axis label</span></span><br><span class="line">     ylab(<span class="string">&quot;Weight (Kg)&quot;</span>)                       <span class="comment"># Set y-axis label</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-28.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Also possible to set the axis label with the scale</span></span><br><span class="line"><span class="comment"># Note that vertical space is still reserved for x&#x27;s label</span></span><br><span class="line">bp + scale_x_discrete(name=<span class="string">&quot;&quot;</span>) +</span><br><span class="line">     scale_y_continuous(name=<span class="string">&quot;Weight (Kg)&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-29.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Change font options:</span></span><br><span class="line"><span class="comment"># X-axis label: bold, red, and 20 points</span></span><br><span class="line"><span class="comment"># X-axis tick marks: rotate 90 degrees CCW, move to the left a bit (using vjust,</span></span><br><span class="line"><span class="comment">#   since the labels are rotated), and 16 points</span></span><br><span class="line">bp + theme(axis.title.x = element_text(face=<span class="string">&quot;bold&quot;</span>, colour=<span class="string">&quot;#990000&quot;</span>, size=<span class="number">20</span>),</span><br><span class="line">           axis.text.x  = element_text(angle=<span class="number">90</span>, vjust=<span class="number">0.5</span>, size=<span class="number">16</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-30.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Label formatters</span></span><br><span class="line">library(scales)   <span class="comment"># Need the scales package</span></span><br><span class="line">bp + scale_y_continuous(labels=percent) +</span><br><span class="line">     scale_x_discrete(labels=abbreviate)  <span class="comment"># In this particular case, it has no effect</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-31.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Self-defined formatting function for times.</span></span><br><span class="line">timeHMS_formatter &lt;- <span class="keyword">function</span>(x) &#123;</span><br><span class="line">    h &lt;- <span class="built_in">floor</span>(x/<span class="number">60</span>)</span><br><span class="line">    m &lt;- <span class="built_in">floor</span>(x %% <span class="number">60</span>)</span><br><span class="line">    s &lt;- <span class="built_in">round</span>(<span class="number">60</span>*(x %% <span class="number">1</span>))                   <span class="comment"># Round to nearest second</span></span><br><span class="line">    lab &lt;- sprintf(<span class="string">&#x27;%02d:%02d:%02d&#x27;</span>, h, m, s) <span class="comment"># Format the strings as HH:MM:SS</span></span><br><span class="line">    lab &lt;- gsub(<span class="string">&#x27;^00:&#x27;</span>, <span class="string">&#x27;&#x27;</span>, lab)              <span class="comment"># Remove leading 00: if present</span></span><br><span class="line">    lab &lt;- gsub(<span class="string">&#x27;^0&#x27;</span>, <span class="string">&#x27;&#x27;</span>, lab)                <span class="comment"># Remove leading 0 if present</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bp + scale_y_continuous(label=timeHMS_formatter)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-32.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide all the gridlines</span></span><br><span class="line">bp + theme(panel.grid.minor=element_blank(),</span><br><span class="line">           panel.grid.major=element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-33.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide just the minor gridlines</span></span><br><span class="line">bp + theme(panel.grid.minor=element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-34.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide all the vertical gridlines</span></span><br><span class="line">bp + theme(panel.grid.minor.x=element_blank(),</span><br><span class="line">           panel.grid.major.x=element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-35.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hide all the horizontal gridlines</span></span><br><span class="line">bp + theme(panel.grid.minor.y=element_blank(),</span><br><span class="line">           panel.grid.major.y=element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-21-36.png"><!-- --></p>
<h2 id="图注"><a href="#图注" class="headerlink" title="图注"></a>图注</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line">bp &lt;- ggplot(data=PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()</span><br><span class="line">bp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Remove legend for a particular aesthetic (fill)</span></span><br><span class="line">bp + guides(fill=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># It can also be done when specifying the scale</span></span><br><span class="line">bp + scale_fill_discrete(guide=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This removes all legends</span></span><br><span class="line">bp + theme(legend.position=<span class="string">&quot;none&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Changing the order of items in the legend</span></span><br><span class="line">bp + scale_fill_discrete(breaks=<span class="built_in">c</span>(<span class="string">&quot;trt1&quot;</span>,<span class="string">&quot;ctrl&quot;</span>,<span class="string">&quot;trt2&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reversing the order of items in the legend</span></span><br><span class="line"><span class="comment"># These two methods are equivalent:</span></span><br><span class="line">bp + guides(fill = guide_legend(reverse=<span class="literal">TRUE</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + scale_fill_discrete(guide = guide_legend(reverse=<span class="literal">TRUE</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># You can also modify the scale directly:</span></span><br><span class="line">bp + scale_fill_discrete(breaks = rev(levels(PlantGrowth$group)))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Remove title for fill legend</span></span><br><span class="line">bp + guides(fill=guide_legend(title=<span class="literal">NULL</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Remove title for all legends</span></span><br><span class="line">bp + theme(legend.title=element_blank())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Modifying the text of legend titles and labels</span></span><br><span class="line">bp + scale_fill_discrete(name=<span class="string">&quot;Experimental\nCondition&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + scale_fill_discrete(name=<span class="string">&quot;Experimental\nCondition&quot;</span>,</span><br><span class="line">                         breaks=<span class="built_in">c</span>(<span class="string">&quot;ctrl&quot;</span>, <span class="string">&quot;trt1&quot;</span>, <span class="string">&quot;trt2&quot;</span>),</span><br><span class="line">                         labels=<span class="built_in">c</span>(<span class="string">&quot;Control&quot;</span>, <span class="string">&quot;Treatment 1&quot;</span>, <span class="string">&quot;Treatment 2&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Using a manual scale instead of hue</span></span><br><span class="line">bp + scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">&quot;#999999&quot;</span>, <span class="string">&quot;#E69F00&quot;</span>, <span class="string">&quot;#56B4E9&quot;</span>), </span><br><span class="line">                       name=<span class="string">&quot;Experimental\nCondition&quot;</span>,</span><br><span class="line">                       breaks=<span class="built_in">c</span>(<span class="string">&quot;ctrl&quot;</span>, <span class="string">&quot;trt1&quot;</span>, <span class="string">&quot;trt2&quot;</span>),</span><br><span class="line">                       labels=<span class="built_in">c</span>(<span class="string">&quot;Control&quot;</span>, <span class="string">&quot;Treatment 1&quot;</span>, <span class="string">&quot;Treatment 2&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A different data set</span></span><br><span class="line">df1 &lt;- data.frame(</span><br><span class="line">    sex = factor(<span class="built_in">c</span>(<span class="string">&quot;Female&quot;</span>,<span class="string">&quot;Female&quot;</span>,<span class="string">&quot;Male&quot;</span>,<span class="string">&quot;Male&quot;</span>)),</span><br><span class="line">    time = factor(<span class="built_in">c</span>(<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>,<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>), levels=<span class="built_in">c</span>(<span class="string">&quot;Lunch&quot;</span>,<span class="string">&quot;Dinner&quot;</span>)),</span><br><span class="line">    total_bill = <span class="built_in">c</span>(<span class="number">13.53</span>, <span class="number">16.81</span>, <span class="number">16.24</span>, <span class="number">17.42</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A basic graph</span></span><br><span class="line">lp &lt;- ggplot(data=df1, aes(x=time, y=total_bill, group=sex, shape=sex)) +</span><br><span class="line">  geom_line() + geom_point()</span><br><span class="line">lp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-14.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Change the legend</span></span><br><span class="line">lp + scale_shape_discrete(name  =<span class="string">&quot;Payer&quot;</span>,</span><br><span class="line">                          breaks=<span class="built_in">c</span>(<span class="string">&quot;Female&quot;</span>, <span class="string">&quot;Male&quot;</span>),</span><br><span class="line">                          labels=<span class="built_in">c</span>(<span class="string">&quot;Woman&quot;</span>, <span class="string">&quot;Man&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-15.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Specify colour and shape</span></span><br><span class="line">lp1 &lt;- ggplot(data=df1, aes(x=time, y=total_bill, group=sex, shape=sex, colour=sex)) + </span><br><span class="line">  geom_line() + geom_point()</span><br><span class="line">lp1</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-16.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Here&#x27;s what happens if you just specify colour</span></span><br><span class="line">lp1 + scale_colour_discrete(name  =<span class="string">&quot;Payer&quot;</span>,</span><br><span class="line">                            breaks=<span class="built_in">c</span>(<span class="string">&quot;Female&quot;</span>, <span class="string">&quot;Male&quot;</span>),</span><br><span class="line">                            labels=<span class="built_in">c</span>(<span class="string">&quot;Woman&quot;</span>, <span class="string">&quot;Man&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-17.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Specify both colour and shape</span></span><br><span class="line">lp1 + scale_colour_discrete(name  =<span class="string">&quot;Payer&quot;</span>,</span><br><span class="line">                            breaks=<span class="built_in">c</span>(<span class="string">&quot;Female&quot;</span>, <span class="string">&quot;Male&quot;</span>),</span><br><span class="line">                            labels=<span class="built_in">c</span>(<span class="string">&quot;Woman&quot;</span>, <span class="string">&quot;Man&quot;</span>)) +</span><br><span class="line">      scale_shape_discrete(name  =<span class="string">&quot;Payer&quot;</span>,</span><br><span class="line">                           breaks=<span class="built_in">c</span>(<span class="string">&quot;Female&quot;</span>, <span class="string">&quot;Male&quot;</span>),</span><br><span class="line">                           labels=<span class="built_in">c</span>(<span class="string">&quot;Woman&quot;</span>, <span class="string">&quot;Man&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-18.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Changing the factor in the data frame</span></span><br><span class="line">pg &lt;- PlantGrowth    <span class="comment"># Copy data into new data frame</span></span><br><span class="line"><span class="comment"># Rename the column and the values in the factor</span></span><br><span class="line">levels(pg$group)[levels(pg$group)==<span class="string">&quot;ctrl&quot;</span>] &lt;- <span class="string">&quot;Control&quot;</span></span><br><span class="line">levels(pg$group)[levels(pg$group)==<span class="string">&quot;trt1&quot;</span>] &lt;- <span class="string">&quot;Treatment 1&quot;</span></span><br><span class="line">levels(pg$group)[levels(pg$group)==<span class="string">&quot;trt2&quot;</span>] &lt;- <span class="string">&quot;Treatment 2&quot;</span></span><br><span class="line"><span class="built_in">names</span>(pg)[<span class="built_in">names</span>(pg)==<span class="string">&quot;group&quot;</span>]  &lt;- <span class="string">&quot;Experimental Condition&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># View a few rows from the end product</span></span><br><span class="line">head(pg)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   weight Experimental Condition</span><br><span class="line">## 1   4.17                Control</span><br><span class="line">## 2   5.58                Control</span><br><span class="line">## 3   5.18                Control</span><br><span class="line">## 4   6.11                Control</span><br><span class="line">## 5   4.50                Control</span><br><span class="line">## 6   4.61                Control</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make the plot </span></span><br><span class="line">ggplot(data=pg, aes(x=`Experimental Condition`, y=weight, fill=`Experimental Condition`)) +</span><br><span class="line">    geom_boxplot()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-19.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Title appearance</span></span><br><span class="line">bp + theme(legend.title = element_text(colour=<span class="string">&quot;blue&quot;</span>, size=<span class="number">16</span>, face=<span class="string">&quot;bold&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-20.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Label appearance</span></span><br><span class="line">bp + theme(legend.text = element_text(colour=<span class="string">&quot;blue&quot;</span>, size = <span class="number">16</span>, face = <span class="string">&quot;bold&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-21.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + theme(legend.background = element_rect())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-22.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + theme(legend.background = element_rect(fill=<span class="string">&quot;gray90&quot;</span>, size=<span class="number">.5</span>, linetype=<span class="string">&quot;dotted&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-23.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Changing the position of the legend</span></span><br><span class="line">bp + theme(legend.position=<span class="string">&quot;top&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-24.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Position legend in graph, where x,y is 0,0 (bottom left) to 1,1 (top right)</span></span><br><span class="line">bp + theme(legend.position=<span class="built_in">c</span>(<span class="number">.5</span>, <span class="number">.5</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-25.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set the &quot;anchoring point&quot; of the legend (bottom-left is 0,0; top-right is 1,1)</span></span><br><span class="line"><span class="comment"># Put bottom-left corner of legend box in bottom-left corner of graph</span></span><br><span class="line">bp + theme(legend.justification=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0</span>), legend.position=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-26.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Put bottom-right corner of legend box in bottom-right corner of graph</span></span><br><span class="line">bp + theme(legend.justification=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">0</span>), legend.position=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-27.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hiding slashes in the legend</span></span><br><span class="line"><span class="comment"># No outline</span></span><br><span class="line">ggplot(data=PlantGrowth, aes(x=group, fill=group)) +</span><br><span class="line">    geom_bar()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-28.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add outline, but slashes appear in legend</span></span><br><span class="line">ggplot(data=PlantGrowth, aes(x=group, fill=group)) +</span><br><span class="line">    geom_bar(colour=<span class="string">&quot;black&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-29.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A hack to hide the slashes: first graph the bars with no outline and add the legend,</span></span><br><span class="line"><span class="comment"># then graph the bars again with outline, but with a blank legend.</span></span><br><span class="line">ggplot(data=PlantGrowth, aes(x=group, fill=group)) +</span><br><span class="line">    geom_bar() +</span><br><span class="line">    geom_bar(colour=<span class="string">&quot;black&quot;</span>, show.legend=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-22-30.png"><!-- --></p>
<h2 id="线条"><a href="#线条" class="headerlink" title="线条"></a>线条</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">     cond result</span></span><br><span class="line"><span class="string">  control     10</span></span><br><span class="line"><span class="string">treatment   11.5</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># Basic bar plot</span></span><br><span class="line">bp &lt;- ggplot(dat, aes(x=cond, y=result)) +</span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>)</span><br><span class="line">bp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add a horizontal line</span></span><br><span class="line">bp + geom_hline(aes(yintercept=<span class="number">12</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make the line red and dashed</span></span><br><span class="line">bp + geom_hline(aes(yintercept=<span class="number">12</span>), colour=<span class="string">&quot;#990000&quot;</span>, linetype=<span class="string">&quot;dashed&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Draw separate hlines for each bar. First add another column to dat</span></span><br><span class="line">dat$hline &lt;- <span class="built_in">c</span>(<span class="number">9</span>,<span class="number">12</span>)</span><br><span class="line">dat</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##        cond result hline</span><br><span class="line">## 1   control   10.0     9</span><br><span class="line">## 2 treatment   11.5    12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Need to re-specify bp, because the data has changed</span></span><br><span class="line">bp &lt;- ggplot(dat, aes(x=cond, y=result)) +</span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Draw with separate lines for each bar</span></span><br><span class="line">bp + geom_errorbar(aes(ymax=hline, ymin=hline), colour=<span class="string">&quot;#AA0000&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make the lines narrower</span></span><br><span class="line">bp + geom_errorbar(width=<span class="number">0.5</span>, aes(ymax=hline, ymin=hline), colour=<span class="string">&quot;#AA0000&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Can get the same result, even if we get the hline values from a second data frame</span></span><br><span class="line"><span class="comment"># Define data frame with hline</span></span><br><span class="line">dat_hlines &lt;- data.frame(cond=<span class="built_in">c</span>(<span class="string">&quot;control&quot;</span>,<span class="string">&quot;treatment&quot;</span>), hline=<span class="built_in">c</span>(<span class="number">9</span>,<span class="number">12</span>))</span><br><span class="line">dat_hlines</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##        cond hline</span><br><span class="line">## 1   control     9</span><br><span class="line">## 2 treatment    12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The bars are from dat, but the lines are from dat_hlines</span></span><br><span class="line">bp + geom_errorbar(data=dat_hlines, aes(y=<span class="literal">NULL</span>, ymax=hline, ymin=hline), colour=<span class="string">&quot;#AA0000&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">     cond group result hline</span></span><br><span class="line"><span class="string">  control     A     10     9</span></span><br><span class="line"><span class="string">treatment     A   11.5    12</span></span><br><span class="line"><span class="string">  control     B     12     9</span></span><br><span class="line"><span class="string">treatment     B     14    12</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line">dat</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##        cond group result hline</span><br><span class="line">## 1   control     A   10.0     9</span><br><span class="line">## 2 treatment     A   11.5    12</span><br><span class="line">## 3   control     B   12.0     9</span><br><span class="line">## 4 treatment     B   14.0    12</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define basic bar plot</span></span><br><span class="line">bp &lt;- ggplot(dat, aes(x=cond, y=result, fill=group)) +</span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>)</span><br><span class="line">bp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The error bars get plotted over one another -- there are four but it looks</span></span><br><span class="line"><span class="comment"># like two</span></span><br><span class="line">bp + geom_errorbar(aes(ymax=hline, ymin=hline), linetype=<span class="string">&quot;dashed&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dat &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">     cond group result hline</span></span><br><span class="line"><span class="string">  control     A     10    11</span></span><br><span class="line"><span class="string">treatment     A   11.5    12</span></span><br><span class="line"><span class="string">  control     B     12  12.5</span></span><br><span class="line"><span class="string">treatment     B     14    15</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define basic bar plot</span></span><br><span class="line">bp &lt;- ggplot(dat, aes(x=cond, y=result, fill=group)) +</span><br><span class="line">    geom_bar(position=position_dodge(), stat=<span class="string">&quot;identity&quot;</span>)</span><br><span class="line">bp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">bp + geom_errorbar(aes(ymax=hline, ymin=hline), linetype=<span class="string">&quot;dashed&quot;</span>,</span><br><span class="line">                   position=position_dodge())</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># With two continuous axes</span></span><br><span class="line">dat &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      cond xval yval</span></span><br><span class="line"><span class="string">   control 11.5 10.8</span></span><br><span class="line"><span class="string">   control  9.3 12.9</span></span><br><span class="line"><span class="string">   control  8.0  9.9</span></span><br><span class="line"><span class="string">   control 11.5 10.1</span></span><br><span class="line"><span class="string">   control  8.6  8.3</span></span><br><span class="line"><span class="string">   control  9.9  9.5</span></span><br><span class="line"><span class="string">   control  8.8  8.7</span></span><br><span class="line"><span class="string">   control 11.7 10.1</span></span><br><span class="line"><span class="string">   control  9.7  9.3</span></span><br><span class="line"><span class="string">   control  9.8 12.0</span></span><br><span class="line"><span class="string"> treatment 10.4 10.6</span></span><br><span class="line"><span class="string"> treatment 12.1  8.6</span></span><br><span class="line"><span class="string"> treatment 11.2 11.0</span></span><br><span class="line"><span class="string"> treatment 10.0  8.8</span></span><br><span class="line"><span class="string"> treatment 12.9  9.5</span></span><br><span class="line"><span class="string"> treatment  9.1 10.0</span></span><br><span class="line"><span class="string"> treatment 13.4  9.6</span></span><br><span class="line"><span class="string"> treatment 11.6  9.8</span></span><br><span class="line"><span class="string"> treatment 11.5  9.8</span></span><br><span class="line"><span class="string"> treatment 12.0 10.6</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># The basic scatterplot</span></span><br><span class="line">sp &lt;- ggplot(dat, aes(x=xval, y=yval, colour=cond)) + geom_point()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a horizontal line</span></span><br><span class="line">sp + geom_hline(aes(yintercept=<span class="number">10</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add a red dashed vertical line</span></span><br><span class="line">sp + geom_hline(aes(yintercept=<span class="number">10</span>)) +</span><br><span class="line">    geom_vline(aes(xintercept=<span class="number">11.5</span>), colour=<span class="string">&quot;#BB0000&quot;</span>, linetype=<span class="string">&quot;dashed&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(dplyr)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#x27;dplyr&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from &#x27;package:plyr&#x27;:</span><br><span class="line">## </span><br><span class="line">##     arrange, count, desc, failwith, id, mutate, rename, summarise,</span><br><span class="line">##     summarize</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following object is masked from &#x27;package:car&#x27;:</span><br><span class="line">## </span><br><span class="line">##     recode</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from &#x27;package:stats&#x27;:</span><br><span class="line">## </span><br><span class="line">##     filter, lag</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## The following objects are masked from &#x27;package:base&#x27;:</span><br><span class="line">## </span><br><span class="line">##     intersect, setdiff, setequal, union</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">lines &lt;- dat %&gt;%</span><br><span class="line">  group_by(cond) %&gt;%</span><br><span class="line">  summarise(</span><br><span class="line">    x = mean(xval),</span><br><span class="line">    ymin = <span class="built_in">min</span>(yval),</span><br><span class="line">    ymax = <span class="built_in">max</span>(yval)</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `summarise()` ungrouping output (override with `.groups` argument)</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add colored lines for the mean xval of each group</span></span><br><span class="line">sp + geom_hline(aes(yintercept=<span class="number">10</span>)) +</span><br><span class="line">     geom_linerange(aes(x=x, y=<span class="literal">NULL</span>, ymin=ymin, ymax=ymax), data=lines)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Facet, based on cond</span></span><br><span class="line">spf &lt;- sp + facet_grid(. ~ cond)</span><br><span class="line">spf</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-14.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Draw a horizontal line in all of the facets at the same value</span></span><br><span class="line">spf + geom_hline(aes(yintercept=<span class="number">10</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-23-15.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dat_vlines &lt;- data.frame(cond=levels(dat$cond), xval=c(10,11.5))</span></span><br><span class="line"><span class="comment"># dat_vlines</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># spf + geom_hline(aes(yintercept=10)) +</span></span><br><span class="line"><span class="comment">#       geom_vline(aes(xintercept=xval), data=dat_vlines,</span></span><br><span class="line"><span class="comment">#                     colour=&quot;#990000&quot;, linetype=&quot;dashed&quot;)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># spf + geom_hline(aes(yintercept=10)) +</span></span><br><span class="line"><span class="comment">#      geom_linerange(aes(x=x, y=NULL, ymin=ymin, ymax=ymax), data=lines)</span></span><br></pre></td></tr></table></figure>

<h2 id="分面"><a href="#分面" class="headerlink" title="分面"></a>分面</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(reshape2)</span><br><span class="line"><span class="comment"># Look at first few rows</span></span><br><span class="line">head(tips)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   total_bill  tip    sex smoker day   time size</span><br><span class="line">## 1      16.99 1.01 Female     No Sun Dinner    2</span><br><span class="line">## 2      10.34 1.66   Male     No Sun Dinner    3</span><br><span class="line">## 3      21.01 3.50   Male     No Sun Dinner    3</span><br><span class="line">## 4      23.68 3.31   Male     No Sun Dinner    2</span><br><span class="line">## 5      24.59 3.61 Female     No Sun Dinner    4</span><br><span class="line">## 6      25.29 4.71   Male     No Sun Dinner    4</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line">sp &lt;- ggplot(tips, aes(x=total_bill, y=tip/total_bill)) + geom_point(shape=<span class="number">1</span>)</span><br><span class="line">sp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Divide by levels of &quot;sex&quot;, in the vertical direction</span></span><br><span class="line">sp + facet_grid(sex ~ .)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Divide by levels of &quot;sex&quot;, in the horizontal direction</span></span><br><span class="line">sp + facet_grid(. ~ sex)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Divide with &quot;sex&quot; vertical, &quot;day&quot; horizontal</span></span><br><span class="line">sp + facet_grid(sex ~ day)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Divide by day, going horizontally and wrapping with 2 columns</span></span><br><span class="line">sp + facet_wrap( ~ day, ncol=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">sp + facet_grid(sex ~ day) +</span><br><span class="line">    theme(strip.text.x = element_text(size=<span class="number">8</span>, angle=<span class="number">75</span>),</span><br><span class="line">          strip.text.y = element_text(size=<span class="number">12</span>, face=<span class="string">&quot;bold&quot;</span>),</span><br><span class="line">          strip.background = element_rect(colour=<span class="string">&quot;red&quot;</span>, fill=<span class="string">&quot;#CCCCFF&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">labels &lt;- <span class="built_in">c</span>(Female = <span class="string">&quot;Women&quot;</span>, Male = <span class="string">&quot;Men&quot;</span>)</span><br><span class="line">sp + facet_grid(. ~ sex, labeller=labeller(sex = labels))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">tips2 &lt;- tips</span><br><span class="line">levels(tips2$sex)[levels(tips2$sex)==<span class="string">&quot;Female&quot;</span>] &lt;- <span class="string">&quot;Women&quot;</span></span><br><span class="line">levels(tips2$sex)[levels(tips2$sex)==<span class="string">&quot;Male&quot;</span>]   &lt;- <span class="string">&quot;Men&quot;</span></span><br><span class="line">head(tips2, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##   total_bill  tip   sex smoker day   time size</span><br><span class="line">## 1      16.99 1.01 Women     No Sun Dinner    2</span><br><span class="line">## 2      10.34 1.66   Men     No Sun Dinner    3</span><br><span class="line">## 3      21.01 3.50   Men     No Sun Dinner    3</span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Both of these will give the same output:</span></span><br><span class="line">sp2 &lt;- ggplot(tips2, aes(x=total_bill, y=tip/total_bill)) + geom_point(shape=<span class="number">1</span>)</span><br><span class="line">sp2 + facet_grid(. ~ sex)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reverse each strings in a character vector</span></span><br><span class="line">reverse &lt;- <span class="keyword">function</span>(strings) &#123;</span><br><span class="line">    strings &lt;- strsplit(strings, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    vapply(strings, <span class="keyword">function</span>(x) &#123;</span><br><span class="line">        paste(rev(x), collapse = <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;, FUN.VALUE = character(<span class="number">1</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sp + facet_grid(. ~ sex, labeller=labeller(sex = reverse))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Free scales</span></span><br><span class="line"><span class="comment"># A histogram of bill sizes</span></span><br><span class="line">hp &lt;- ggplot(tips, aes(x=total_bill)) + geom_histogram(binwidth=<span class="number">2</span>,colour=<span class="string">&quot;white&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Histogram of total_bill, divided by sex and smoker</span></span><br><span class="line">hp + facet_grid(sex ~ smoker)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Same as above, with scales=&quot;free_y&quot;</span></span><br><span class="line">hp + facet_grid(sex ~ smoker, scales=<span class="string">&quot;free_y&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># With panels that have the same scaling, but different range </span></span><br><span class="line"><span class="comment"># (and therefore different physical sizes)</span></span><br><span class="line">hp + facet_grid(sex ~ smoker, scales=<span class="string">&quot;free&quot;</span>, space=<span class="string">&quot;free&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-24-12.png"><!-- --></p>
<h2 id="一页多图"><a href="#一页多图" class="headerlink" title="一页多图"></a>一页多图</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">multiplot &lt;- <span class="keyword">function</span>(..., plotlist=<span class="literal">NULL</span>, file, cols=<span class="number">1</span>, layout=<span class="literal">NULL</span>) &#123;</span><br><span class="line">  library(grid)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Make a list from the ... arguments and plotlist</span></span><br><span class="line">  plots &lt;- <span class="built_in">c</span>(<span class="built_in">list</span>(...), plotlist)</span><br><span class="line"></span><br><span class="line">  numPlots = <span class="built_in">length</span>(plots)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># If layout is NULL, then use &#x27;cols&#x27; to determine layout</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">is.null</span>(layout)) &#123;</span><br><span class="line">    <span class="comment"># Make the panel</span></span><br><span class="line">    <span class="comment"># ncol: Number of columns of plots</span></span><br><span class="line">    <span class="comment"># nrow: Number of rows needed, calculated from # of cols</span></span><br><span class="line">    layout &lt;- matrix(seq(<span class="number">1</span>, cols * <span class="built_in">ceiling</span>(numPlots/cols)),</span><br><span class="line">                    ncol = cols, nrow = <span class="built_in">ceiling</span>(numPlots/cols))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (numPlots==<span class="number">1</span>) &#123;</span><br><span class="line">    print(plots[[<span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment"># Set up the page</span></span><br><span class="line">    grid.newpage()</span><br><span class="line">    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Make each plot, in the correct location</span></span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:numPlots) &#123;</span><br><span class="line">      <span class="comment"># Get the i,j matrix positions of the regions that contain this subplot</span></span><br><span class="line">      matchidx &lt;- as.data.frame(which(layout == i, arr.ind = <span class="literal">TRUE</span>))</span><br><span class="line"></span><br><span class="line">      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,</span><br><span class="line">                                      layout.pos.col = matchidx$col))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># This example uses the ChickWeight dataset, which comes with ggplot2</span></span><br><span class="line"><span class="comment"># First plot</span></span><br><span class="line">p1 &lt;- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) +</span><br><span class="line">    geom_line() +</span><br><span class="line">    ggtitle(<span class="string">&quot;Growth curve for individual chicks&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Second plot</span></span><br><span class="line">p2 &lt;- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) +</span><br><span class="line">    geom_point(alpha=<span class="number">.3</span>) +</span><br><span class="line">    geom_smooth(alpha=<span class="number">.2</span>, size=<span class="number">1</span>) +</span><br><span class="line">    ggtitle(<span class="string">&quot;Fitted growth curve per diet&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Third plot</span></span><br><span class="line">p3 &lt;- ggplot(subset(ChickWeight, Time==<span class="number">21</span>), aes(x=weight, colour=Diet)) +</span><br><span class="line">    geom_density() +</span><br><span class="line">    ggtitle(<span class="string">&quot;Final weight, by diet&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fourth plot</span></span><br><span class="line">p4 &lt;- ggplot(subset(ChickWeight, Time==<span class="number">21</span>), aes(x=weight, fill=Diet)) +</span><br><span class="line">    geom_histogram(colour=<span class="string">&quot;black&quot;</span>, binwidth=<span class="number">50</span>) +</span><br><span class="line">    facet_grid(Diet ~ .) +</span><br><span class="line">    ggtitle(<span class="string">&quot;Final weight, by diet&quot;</span>) +</span><br><span class="line">    theme(legend.position=<span class="string">&quot;none&quot;</span>)        <span class="comment"># No legend (redundant in this graph)    </span></span><br><span class="line"></span><br><span class="line">multiplot(p1, p2, p3, p4, cols=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## `geom_smooth()` using method = &#x27;loess&#x27; and formula &#x27;y ~ x&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-25-1.png"><!-- --></p>
<h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Two variables</span></span><br><span class="line">df &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> cond yval</span></span><br><span class="line"><span class="string">    A 2</span></span><br><span class="line"><span class="string">    B 2.5</span></span><br><span class="line"><span class="string">    C 1.6</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Three variables</span></span><br><span class="line">df2 &lt;- read.table(header=<span class="literal">TRUE</span>, text=<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> cond1 cond2 yval</span></span><br><span class="line"><span class="string">    A      I 2</span></span><br><span class="line"><span class="string">    A      J 2.5</span></span><br><span class="line"><span class="string">    A      K 1.6</span></span><br><span class="line"><span class="string">    B      I 2.2</span></span><br><span class="line"><span class="string">    B      J 2.4</span></span><br><span class="line"><span class="string">    B      K 1.2</span></span><br><span class="line"><span class="string">    C      I 1.7</span></span><br><span class="line"><span class="string">    C      J 2.3</span></span><br><span class="line"><span class="string">    C      K 1.9</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># Default: dark bars</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-1.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bars with red outlines</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>, colour=<span class="string">&quot;#FF9999&quot;</span>) </span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-2.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Red fill, black outlines</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>, fill=<span class="string">&quot;#FF9999&quot;</span>, colour=<span class="string">&quot;black&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-3.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Standard black lines and points</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval)) + </span><br><span class="line">    geom_line(aes(group=<span class="number">1</span>)) +     <span class="comment"># Group all points; otherwise no line will show</span></span><br><span class="line">    geom_point(size=<span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-4.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Dark blue lines, red dots</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval)) + </span><br><span class="line">    geom_line(aes(group=<span class="number">1</span>), colour=<span class="string">&quot;#000099&quot;</span>) +  <span class="comment"># Blue lines</span></span><br><span class="line">    geom_point(size=<span class="number">3</span>, colour=<span class="string">&quot;#CC0000&quot;</span>)         <span class="comment"># Red dots</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-5.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bars: x and fill both depend on cond2</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-6.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bars with other dataset; fill depends on cond2</span></span><br><span class="line">ggplot(df2, aes(x=cond1, y=yval)) + </span><br><span class="line">    geom_bar(aes(fill=cond2),   <span class="comment"># fill depends on cond2</span></span><br><span class="line">             stat=<span class="string">&quot;identity&quot;</span>,</span><br><span class="line">             colour=<span class="string">&quot;black&quot;</span>,    <span class="comment"># Black outline for all</span></span><br><span class="line">             position=position_dodge()) <span class="comment"># Put bars side-by-side instead of stacked</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-7.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Lines and points; colour depends on cond2</span></span><br><span class="line">ggplot(df2, aes(x=cond1, y=yval)) + </span><br><span class="line">    geom_line(aes(colour=cond2, group=cond2)) + <span class="comment"># colour, group both depend on cond2</span></span><br><span class="line">    geom_point(aes(colour=cond2),               <span class="comment"># colour depends on cond2</span></span><br><span class="line">               size=<span class="number">3</span>)                          <span class="comment"># larger points, different shape</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-8.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Equivalent to above; but move &quot;colour=cond2&quot; into the global aes() mapping</span></span><br><span class="line"><span class="comment"># ggplot(df2, aes(x=cond1, y=yval, colour=cond2)) + </span></span><br><span class="line"><span class="comment">#    geom_line(aes(group=cond2)) +</span></span><br><span class="line"><span class="comment">#    geom_point(size=3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The palette with grey:</span></span><br><span class="line">cbPalette &lt;- <span class="built_in">c</span>(<span class="string">&quot;#999999&quot;</span>, <span class="string">&quot;#E69F00&quot;</span>, <span class="string">&quot;#56B4E9&quot;</span>, <span class="string">&quot;#009E73&quot;</span>, <span class="string">&quot;#F0E442&quot;</span>, </span><br><span class="line">               <span class="string">&quot;#0072B2&quot;</span>, <span class="string">&quot;#D55E00&quot;</span>, <span class="string">&quot;#CC79A7&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The palette with black:</span></span><br><span class="line">cbbPalette &lt;- <span class="built_in">c</span>(<span class="string">&quot;#000000&quot;</span>, <span class="string">&quot;#E69F00&quot;</span>, <span class="string">&quot;#56B4E9&quot;</span>, <span class="string">&quot;#009E73&quot;</span>, <span class="string">&quot;#F0E442&quot;</span>,</span><br><span class="line">                <span class="string">&quot;#0072B2&quot;</span>, <span class="string">&quot;#D55E00&quot;</span>, <span class="string">&quot;#CC79A7&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># To use for fills, add</span></span><br><span class="line"><span class="comment"># scale_fill_manual(values=cbPalette)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To use for line and point colors, add</span></span><br><span class="line"><span class="comment"># scale_colour_manual(values=cbPalette)</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># These two are equivalent; by default scale_fill_hue() is used</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-9.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=&quot;identity&quot;) + scale_fill_hue()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These two are equivalent; by default scale_colour_hue() is used</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, colour=cond)) + geom_point(size=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-10.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ggplot(df, aes(x=cond, y=yval, colour=cond)) + geom_point(size=2) </span></span><br><span class="line"><span class="comment"># + scale_colour_hue()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use luminance=45, instead of default 65</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    scale_fill_hue(l=<span class="number">40</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-11.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reduce saturation (chromaticity) from 100 to 50, and increase luminance</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    scale_fill_hue(<span class="built_in">c</span>=<span class="number">45</span>, l=<span class="number">80</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-12.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Note: use scale_colour_hue() for lines and points</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Palettes: Color Brewer</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    scale_fill_brewer()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-13.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    scale_fill_brewer(palette=<span class="string">&quot;Set1&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-14.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) +</span><br><span class="line">    scale_fill_brewer(palette=<span class="string">&quot;Spectral&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-15.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Palettes: manually-defined</span></span><br><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) + </span><br><span class="line">    scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-16.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot(df, aes(x=cond, y=yval, fill=cond)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>) + </span><br><span class="line">    scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">&quot;#CC6666&quot;</span>, <span class="string">&quot;#9999CC&quot;</span>, <span class="string">&quot;#66CC99&quot;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-17.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Continuous colors</span></span><br><span class="line"><span class="comment"># Generate some data</span></span><br><span class="line">set.seed(<span class="number">133</span>)</span><br><span class="line">df &lt;- data.frame(xval=rnorm(<span class="number">50</span>), yval=rnorm(<span class="number">50</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make color depend on yval</span></span><br><span class="line">ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-18.png"><!-- --></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use a different gradient</span></span><br><span class="line">ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() + </span><br><span class="line">    scale_colour_gradientn(colours=rainbow(<span class="number">4</span>))</span><br></pre></td></tr></table></figure>

<p><img src="/2021/08/07/R%E8%AF%AD%E8%A8%80%E7%AE%80%E6%98%8E%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B0/unnamed-chunk-26-19.png"><!-- --></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
